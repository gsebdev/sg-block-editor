{"version":3,"sources":["../src/index.ts","../src/BlockEditor.tsx","../src/context.tsx","../src/helpers.ts","../src/blocks/ImageBlock.tsx","../src/components/Button.tsx","../src/Block.tsx","../src/components/SpacingTool.tsx","../src/default-blocks.tsx","../src/blocks/TextBlock.tsx","../lib/text-module/component/src/components/TextIgniter/TextIgniter.jsx","../lib/text-module/component/src/contexts/editorContext.jsx","../lib/text-module/component/src/hooks/useEditorFormatting.jsx","../lib/text-module/component/src/hooks/useEditorState.jsx","../lib/text-module/component/src/hooks/useTableOperation.jsx","../lib/text-module/component/src/hooks/useHeadingState.jsx","../lib/text-module/component/src/components/TextIgniter/Toolbar.jsx","../lib/text-module/component/src/assets/icon.jsx","../lib/text-module/component/src/components/ui/Button.jsx","../lib/text-module/component/src/components/ui/ToolTip.jsx","../lib/text-module/component/src/components/ui/Dialog.jsx","../lib/text-module/component/src/components/ui/Dropdown.jsx","../lib/text-module/component/src/hooks/usePreviewMode.jsx","../lib/text-module/component/src/components/TextIgniter/Editor.jsx","../src/blocks/GroupBlock.tsx","../src/definitions.tsx"],"sourcesContent":["import BlockEditor from \"./BlockEditor\";\r\nimport { useEditor }from \"./context\";\r\nimport * as Definitions from './definitions';\r\nimport RowBlock from \"./blocks/GroupBlock\";\r\nimport ImageBlock from \"./blocks/ImageBlock\";\r\nimport TextBlock from \"./blocks/TextBlock\";\r\nimport defaultBlocks from \"./default-blocks\";\r\nimport './sg-block-editor-default-theme.scss';\r\n\r\nexport {\r\n    BlockEditor,\r\n    useEditor,\r\n    Definitions,\r\n    RowBlock,\r\n    ImageBlock,\r\n    TextBlock,\r\n    defaultBlocks\r\n}","import { forwardRef, useCallback, useEffect, useRef } from \"react\";\r\nimport { BlocksEditorContextProvider, useEditor } from \"./context\";\r\nimport { BlocksEditorProps, EditorRefObject } from \"./definitions\";\r\nimport defaultBlocks from \"./default-blocks\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\nimport Block, { AddBlockContextMenu } from \"./Block\";\r\nimport clsx from \"clsx\";\r\n\r\nconst BlockEditorContent: React.FC = () => {\r\n\r\n    const { blocks, setActiveBlock } = useEditor();\r\n    const editorRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleClickOutside = useCallback((e: MouseEvent) => {\r\n        if (editorRef.current && !editorRef.current.contains(e.target as Node)) {\r\n                setActiveBlock(null);\r\n        }\r\n    }, [setActiveBlock]);\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleClickOutside);\r\n        return () => {\r\n            document.body.removeEventListener('click', handleClickOutside);\r\n        };\r\n    }, [handleClickOutside]);\r\n\r\n\r\n    return (\r\n        <div ref={editorRef} className={clsx(\r\n            \"sg-block__editor__content\",\r\n            blocks.size === 0 ? \"sg-block__editor__content--empty\" : \"\"\r\n        )}>\r\n            <div>\r\n                {!!blocks &&\r\n                    Array.from(blocks.values()).filter(block => !block.parentID).map(block => (\r\n                        <Block key={block.blockID} block={block} />\r\n                    ))\r\n                }\r\n                {blocks.size === 0 &&\r\n                    <AddBlockContextMenu>\r\n                        <button className=\"sg-block__btn\"><FaPlus style={{ marginRight: 4 }} />Ajouter du contenu</button>\r\n                    </AddBlockContextMenu>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default forwardRef<EditorRefObject, BlocksEditorProps>(function BlocksEditor({ data, onChange, extraBlocks }, ref) {\r\n    const blocks = {\r\n        ...defaultBlocks,\r\n        ...extraBlocks\r\n    };\r\n\r\n    return (\r\n        <BlocksEditorContextProvider data={data} onChange={onChange} ref={ref} availableBlocks={blocks}>\r\n            <BlockEditorContent />\r\n        </BlocksEditorContextProvider>\r\n    )\r\n});","import { createContext, Dispatch, forwardRef, useCallback, useContext, useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { BlockType, EditorBlock, EditorParsedBlock, EditorProviderProps, EditorRefObject } from \"./definitions\";\r\nimport { SetStateAction } from \"react\";\r\nimport { genBlockID } from \"./helpers\";\r\n\r\nconst initialContext: {\r\n    blocks: Map<string, EditorParsedBlock>,\r\n    setBlocks: Dispatch<SetStateAction<Map<string, EditorParsedBlock>>>,\r\n    addBlock: (type: BlockType['type'], args?: { parentID?: string, position?: 'after' | 'before', reference?: string }) => void,\r\n    updateBlock: (blockID: string, value: Partial<EditorParsedBlock>, shouldNotDirty?: boolean) => void,\r\n    deleteBlock: (blockID: string) => void,\r\n    isDirty: boolean,\r\n    setIsDirty: Dispatch<SetStateAction<boolean>>\r\n    activeBlock: string | null,\r\n    setActiveBlock: Dispatch<SetStateAction<string | null>>,\r\n    availableBlocks: { [key: string]: EditorBlock },\r\n} = {\r\n    isDirty: false,\r\n    setIsDirty: () => { },\r\n    blocks: new Map(),\r\n    setBlocks: () => { },\r\n    addBlock: () => { },\r\n    updateBlock: () => { },\r\n    deleteBlock: () => { },\r\n    activeBlock: null,\r\n    setActiveBlock: () => { },\r\n    availableBlocks: {},\r\n};\r\n\r\nconst blockEditorContext = createContext(initialContext);\r\n\r\nexport const BlocksEditorContextProvider = forwardRef<EditorRefObject, EditorProviderProps>(({ children, data, onChange, availableBlocks }, ref) => {\r\n\r\n    const [blocks, setBlocks] = useState<Map<string, EditorParsedBlock>>(new Map());\r\n    const [renderedJSON, setRenderedJSON] = useState<BlockType[] | null | undefined>(data);\r\n    const [renderedHTML, setRenderedHTML] = useState<string>('');\r\n    const [isDirty, setIsDirty] = useState<boolean>(false);\r\n    const [activeBlock, setActiveBlock] = useState<string | null>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getJSONValue: () => renderedJSON ?? [],\r\n        getHTMLValue: () => renderedHTML ?? ''\r\n    }))\r\n    useEffect(() => {\r\n        if (isDirty) {\r\n            const renderBlocks = (b: EditorParsedBlock): BlockType => {\r\n                if (b.children && Array.isArray(b.children)) {\r\n                    return {\r\n                        type: b.type,\r\n                        value: b.value,\r\n                        children: b.children.map(child => {\r\n                            const childBlock = blocks.get(child);\r\n                            if (childBlock) {\r\n                                return renderBlocks(childBlock);\r\n                            }\r\n                            return {\r\n                                type: 'text',\r\n                                value: {\r\n                                    htmlContent: '<p>[ERROR] Block not found</p>'\r\n                                }\r\n                            };\r\n                        })\r\n                    }\r\n                }\r\n                return {\r\n                    type: b.type,\r\n                    value: b.value,\r\n                };\r\n            }\r\n            setTimeout(() => {\r\n                const blocksValue = Array.from(blocks.values())\r\n                \r\n                //Render the HTML if render function is provided\r\n                const newRenderedHTML = blocksValue.reduce((result: string, b: EditorParsedBlock) => {\r\n                    const { type, value } = b;\r\n                    const { render } = availableBlocks[type] ?? {};\r\n                    if(render) {\r\n                        return result + render(value);\r\n                    }\r\n                    return result + '<p>No render function provided</p>';\r\n                    \r\n                }, '');\r\n\r\n                // Render the JSON\r\n                const newRenderedJSON = blocksValue.filter(block => !block.parentID).map(editorBlock => renderBlocks(editorBlock));\r\n\r\n                setRenderedJSON(newRenderedJSON);\r\n                setRenderedHTML(newRenderedHTML)\r\n                onChange?.(newRenderedJSON);\r\n                setIsDirty(false);\r\n            })\r\n\r\n        }\r\n    }, [blocks, isDirty, onChange]);\r\n\r\n    useEffect(() => {\r\n        setRenderedJSON(data);\r\n        // parse blocks and set initital state\r\n        if (data) {\r\n            const initialBlocks = new Map<string, EditorParsedBlock>();\r\n\r\n            const parseBlocks = (b: BlockType, parentID?: string) => {\r\n                const blockID = genBlockID();\r\n\r\n                if (b.children && Array.isArray(b.children)) {\r\n                    const parsed: EditorParsedBlock = { ...b, blockID, parentID, children: [] };\r\n                    parsed.children = b.children.map(child => parseBlocks(child, blockID));\r\n                    initialBlocks.set(blockID, parsed);\r\n                } else {\r\n                    initialBlocks.set(blockID, {\r\n                        ...b,\r\n                        blockID,\r\n                        parentID,\r\n                        children: undefined\r\n                    });\r\n                }\r\n                return blockID;\r\n            }\r\n\r\n            data.forEach(b => parseBlocks(b));\r\n\r\n            setBlocks(initialBlocks);\r\n        }\r\n    }, [data]);\r\n\r\n    const updateBlock = useCallback((blockID: string, updatedData: Partial<EditorParsedBlock>, shouldNotDirty?: boolean) => {\r\n        setBlocks(prevBlocks => {\r\n            const newBlocks = new Map<string, EditorParsedBlock>(prevBlocks);\r\n            const blockToUpdate = newBlocks.get(blockID);\r\n\r\n            if (!blockToUpdate) return prevBlocks;\r\n\r\n\r\n            const newBlock = {\r\n                ...blockToUpdate,\r\n                ...updatedData,\r\n                value: {\r\n                    ...blockToUpdate.value ?? {},\r\n                    ...updatedData.value ?? {}\r\n                }\r\n            }\r\n\r\n            newBlocks.set(blockID, newBlock);\r\n\r\n            return newBlocks;\r\n        });\r\n        if (!shouldNotDirty) setIsDirty(true);\r\n    }, [setBlocks]);\r\n\r\n    useEffect(() => {\r\n        const blocksThatShouldHaveFocusWithin: string[] = [];\r\n\r\n        if (activeBlock) {\r\n            \r\n            // find all blocks that should have focus within\r\n            const activeBlockParent = blocks.get(activeBlock)?.parentID;\r\n            let nParentBlock: EditorParsedBlock | undefined = activeBlockParent ? blocks.get(activeBlockParent) : undefined;\r\n            while (nParentBlock) {\r\n                blocksThatShouldHaveFocusWithin.push(nParentBlock.blockID);\r\n                nParentBlock = nParentBlock.parentID ? blocks.get(nParentBlock.parentID) : undefined;\r\n            }\r\n        }\r\n\r\n        // update necessary blocks to have focus within\r\n        blocks.forEach((block) => {\r\n            if (blocksThatShouldHaveFocusWithin.includes(block.blockID)) {\r\n                if (!block.hasFocusWithin) updateBlock(block.blockID, { hasFocusWithin: true }, true)\r\n            } else {\r\n                if (block.hasFocusWithin) updateBlock(block.blockID, { hasFocusWithin: false }, true)\r\n            }\r\n        });\r\n    }, [blocks, activeBlock, updateBlock]);\r\n\r\n    const addBlock = useCallback((type: BlockType['type'], args?: { parentID?: string, position?: 'after' | 'before', reference?: string }) => {\r\n        const blockID = genBlockID();\r\n        const { parentID, position, reference } = args ?? {};\r\n\r\n        setBlocks(prevBlocks => {\r\n            const newBlocksArray = Array.from(prevBlocks);\r\n\r\n            let insertIndex = newBlocksArray.length;\r\n            if (reference) {\r\n                insertIndex = newBlocksArray.findIndex(([id]) => id === reference);\r\n                if (position === 'after') insertIndex += 1;\r\n            }\r\n\r\n            newBlocksArray.splice(insertIndex, 0, [\r\n                blockID, {\r\n                    type,\r\n                    value: type in availableBlocks ? availableBlocks[type]?.defaultValue : undefined,\r\n                    blockID,\r\n                    parentID,\r\n                    children: availableBlocks[type]?.acceptChildren ? [] : undefined\r\n                }]);\r\n\r\n            // When parentID is provided, we insert the new block as a child of that parent\r\n            if (parentID) {\r\n                const parentBlock = newBlocksArray.find(([id]) => id === parentID)?.[1];\r\n                if (parentBlock && Array.isArray(parentBlock.children)) {\r\n\r\n                    if (!parentBlock.children.includes(blockID)) {\r\n                        let childrenInsertIndex = parentBlock.children.length;\r\n                        if (reference) {\r\n                            childrenInsertIndex = parentBlock.children.findIndex(id => id === reference);\r\n                            if (position === 'after') childrenInsertIndex += 1;\r\n                        }\r\n                        parentBlock.children.splice(childrenInsertIndex, 0, blockID);\r\n                    }\r\n                }\r\n            }\r\n            return new Map(newBlocksArray);\r\n        });\r\n        setActiveBlock(blockID);\r\n        setIsDirty(true);\r\n    }, []);\r\n\r\n    const deleteBlock = useCallback((blockID: string) => {\r\n        let newSelectedBlock: string | null = null;\r\n\r\n        setBlocks(prevBlock => {\r\n            const newBlocks = new Map(prevBlock);\r\n            const blockToDelete = newBlocks.get(blockID);\r\n\r\n            if (!blockToDelete) return newBlocks;\r\n\r\n            if (blockToDelete?.parentID) newSelectedBlock = blockToDelete.parentID;\r\n\r\n            const IDsToDelete: string[] = []\r\n\r\n            const getChildrenIDsRecursive = (bID: string) => {\r\n                const b = newBlocks.get(bID);\r\n                if (b && b.children && Array.isArray(b.children)) {\r\n                    for (const childID of b.children) {\r\n                        getChildrenIDsRecursive(childID);\r\n                    }\r\n                }\r\n                IDsToDelete.push(bID);\r\n            }\r\n\r\n            const deleteInParentChildren = () => {\r\n                if (blockToDelete && blockToDelete.parentID) {\r\n                    const parentBlock = newBlocks.get(blockToDelete.parentID);\r\n                    if (parentBlock && parentBlock.children) {\r\n                        parentBlock.children = parentBlock.children.filter(childID => childID !== blockID);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const deleteBlockWithchildren = () => {\r\n                getChildrenIDsRecursive(blockID);\r\n                deleteInParentChildren();\r\n                IDsToDelete.forEach(ID => newBlocks.delete(ID))\r\n            }\r\n\r\n\r\n\r\n            deleteBlockWithchildren();\r\n\r\n            return newBlocks;\r\n        });\r\n        setActiveBlock(newSelectedBlock);\r\n        setIsDirty(true);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <blockEditorContext.Provider value={{\r\n            blocks,\r\n            setBlocks,\r\n            isDirty,\r\n            setIsDirty,\r\n            addBlock,\r\n            updateBlock,\r\n            deleteBlock,\r\n            activeBlock,\r\n            setActiveBlock,\r\n            availableBlocks\r\n        }}>\r\n            {children}\r\n        </blockEditorContext.Provider>\r\n    )\r\n});\r\n\r\nBlocksEditorContextProvider.displayName = 'BlocksEditorContextProvider';\r\n\r\nexport const useEditor = () => useContext(blockEditorContext);\r\n","export const genBlockID = () => '_' + Math.random().toString(36).substr(2, 9);","import React from \"react\";\r\nimport { ChangeEvent, ComponentType, PropsWithChildren, useEffect, useRef, useState } from \"react\";\r\nimport { useEditor } from \"../context\";\r\nimport { BlockType, EditorParsedBlock } from \"../definitions\";\r\nimport { MdAlignHorizontalLeft, MdAlignHorizontalRight, MdAlignHorizontalCenter } from \"react-icons/md\";\r\nimport Button from \"../components/Button\";\r\nimport { BlockToolbar, BlockToolbarColumn } from \"../Block\";\r\nimport { FaImage } from \"react-icons/fa6\";\r\n\r\ntype ImageType = {\r\n    id?: number | string;\r\n    src: string;\r\n}\r\n\r\ntype ImageBlockType = BlockType<{\r\n    image?: ImageType,\r\n    aspect?: number | string,\r\n    size?: {\r\n        height: string | number,\r\n        width: string | number\r\n    },\r\n    align?: 'left' | 'right' | 'center'\r\n}>\r\n\r\nexport type ImageSelectorProps = PropsWithChildren<{\r\n    value?: ImageType,\r\n    onSelect?: (image?: ImageType, preview?: string) => void,\r\n    className?: string\r\n}>;\r\n\r\ntype ImageSelectorWrapperProps = PropsWithChildren<{\r\n    ImageSelector?: ComponentType<ImageSelectorProps>,\r\n    value: ImageSelectorProps['value'],\r\n    onSelect: ImageSelectorProps['onSelect'],\r\n    className?: string\r\n}>;\r\n\r\nconst DefaultImageSelector: React.FC<PropsWithChildren<ImageSelectorProps>> = ({ children, value, onSelect, className }) => {\r\n\r\n    const [currentImage, setCurrentImage] = useState<ImageType | undefined>(value);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (onSelect && currentImage && currentImage.src !== value?.src) onSelect(currentImage);\r\n    }, [currentImage])\r\n\r\n    const handleImageclick = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click();\r\n        }\r\n    }\r\n\r\n    const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0];\r\n        if (file) {\r\n            const reader = new FileReader(); // Create a new FileReader object\r\n\r\n            reader.onload = function (e) {\r\n                if (e.target?.result) {\r\n                    const dataUrl = e.target.result.toString();\r\n                    setCurrentImage({ src: dataUrl });\r\n                }\r\n            };\r\n\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={handleImageclick}>\r\n            {children}\r\n            <input type=\"file\" hidden ref={inputRef} accept=\".jpg, .jpeg, .png\" onChange={handleFileChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ImageSelectorWrapper: React.FC<ImageSelectorWrapperProps> = ({\r\n    children,\r\n    ImageSelector,\r\n    value,\r\n    onSelect,\r\n    className\r\n}) => {\r\n    if (ImageSelector) return (\r\n        <ImageSelector\r\n            value={value}\r\n            onSelect={onSelect}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </ImageSelector>\r\n    );\r\n\r\n    return (\r\n        <DefaultImageSelector\r\n            value={value}\r\n            onSelect={onSelect}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </DefaultImageSelector>\r\n    )\r\n}\r\n\r\nconst ImagePreview: React.FC<{ src?: string, aspect?: number | string, align?: \"left\" | \"right\" | \"center\" }> = ({ src, aspect, align }) => {\r\n\r\n    return (\r\n        <>\r\n            {src ?\r\n                <img\r\n                    className=\"sg-block__blockImage__img\"\r\n                    src={src}\r\n                    style={{\r\n                        aspectRatio: aspect,\r\n                        textAlign: align\r\n                    }}\r\n                    alt=\"Selected Image\"\r\n                /> :\r\n                <div className=\"sg-block__blockImage__placeholder\">\r\n                    <FaImage />\r\n                </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n * Image Block\r\n * \r\n * \r\n */\r\nconst ImageBlock: React.FC<{ block: EditorParsedBlock<ImageBlockType>, isActive?: boolean, ImageSelector?: ComponentType<ImageSelectorProps> }> = ({ block, ImageSelector }) => {\r\n\r\n    const [imagePreview, setImagePreview] = useState<string | undefined>(block.value?.image?.src);\r\n\r\n    const { updateBlock } = useEditor();\r\n\r\n    const { blockID, value } = block;\r\n\r\n    const { image, aspect, height, align } = value ?? {};\r\n\r\n    const updateImageBlock = (newValue: Partial<ImageBlockType['value']>) => {\r\n        updateBlock(blockID, {\r\n            value: {\r\n                ...value,\r\n                ...newValue\r\n            }\r\n        })\r\n    };\r\n\r\n    const handleImageSelection = (newValue?: ImageType, imagePreviewSrc: string|undefined = undefined) => {\r\n        if (newValue) {\r\n            updateImageBlock({\r\n                image: {\r\n                    id: newValue.id,\r\n                    src: newValue.src\r\n                }\r\n            });\r\n            setImagePreview(imagePreviewSrc ?? newValue.src);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (aspect && height !== 'auto') {\r\n            updateImageBlock({\r\n                aspect: undefined,\r\n            })\r\n        }\r\n    }, [height])\r\n\r\n    const aspects = ['auto', 'fill', 4 / 3, 3 / 2, 16 / 9, 1];\r\n    const aspectsLabels = ['original', 'Remplir', '4:3', '3:2', '16:9', '1:1'];\r\n\r\n    const aligns = ['left', 'center', 'right'];\r\n    const alignsIcons = [\r\n        <MdAlignHorizontalLeft key={\"alignLeft\"} />,\r\n        <MdAlignHorizontalCenter key={\"alignCenter\"} />,\r\n        <MdAlignHorizontalRight key={\"alignRight\"} />\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <BlockToolbar>\r\n                <BlockToolbarColumn\r\n                    title={'Aspect'}\r\n                >\r\n\r\n                    {\r\n                        aspects.map((value, index) => (\r\n                            <Button\r\n                                key={value}\r\n                                variant={aspect === value || (value === 'fill' && height === '100%') ? 'selected' : undefined}\r\n                                onClick={() => updateImageBlock({\r\n                                    aspect: aspect === value || value === 'fill' ? undefined : value,\r\n                                    height: value === 'fill' ? '100%' : 'auto'\r\n                                })}\r\n                            >\r\n                                {aspectsLabels[index]}\r\n                            </Button>\r\n                        ))\r\n                    }\r\n                </BlockToolbarColumn>\r\n                <BlockToolbarColumn\r\n                    title={'Alignement'}\r\n                >\r\n                    {\r\n                        aligns.map((value: string, index) => (\r\n                            <Button\r\n                                key={value}\r\n                                variant={align === value ? 'selected' : \"\"}\r\n                                onClick={() => updateImageBlock({ align: align === value ? undefined : value as \"left\"|'right'|'center' })}\r\n                            >\r\n                                {alignsIcons[index]}\r\n                            </Button>\r\n                        ))\r\n                    }\r\n                </BlockToolbarColumn>\r\n            </BlockToolbar>\r\n            <ImageSelectorWrapper\r\n                className=\"sg-block__blockImage__selectorWrapper\"\r\n                value={image}\r\n                onSelect={handleImageSelection}\r\n                ImageSelector={ImageSelector}\r\n            >\r\n\r\n                <ImagePreview src={imagePreview} align={align} aspect={aspect} />\r\n            </ImageSelectorWrapper>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ImageBlock;","import React, { MouseEventHandler, PropsWithChildren } from \"react\"\r\n\r\ntype ButtonProps = PropsWithChildren<{\r\n    className?: string,\r\n    variant?: string,\r\n    onClick?: MouseEventHandler<HTMLButtonElement>,\r\n    title?: string,\r\n    ariaLabel?: string, \r\n}>;\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, className, variant, onClick, ariaLabel, title }) => {\r\n    return (\r\n        <button\r\n            onClick={(e) => {e.preventDefault(); onClick?.(e);}}\r\n            aria-label={ariaLabel}\r\n            title={title}\r\n            className={`sg-block__btn${variant ? ' sg-block__btn--' + variant : ''}${className ? ' ' + className : ''}`}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import clsx from \"clsx\";\r\nimport React, { createContext, Dispatch, MouseEventHandler, PropsWithChildren, ReactNode, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { addBlockMenuProps, EditorParsedBlock } from \"./definitions\";\r\nimport { useEditor } from \"./context\";\r\nimport * as DropdownMenu from \"@radix-ui/react-dropdown-menu\";\r\nimport { Resizable, ResizableProps } from \"re-resizable\";\r\nimport SpacingTool from \"./components/SpacingTool\";\r\n\r\nconst alignStyles = {\r\n    alignSelf: {\r\n        left: 'flex-start',\r\n        center: 'center',\r\n        right: 'flex-end',\r\n    },\r\n    margin: {\r\n        center: '0 auto',\r\n        right: '0 0 0 auto',\r\n        left: '0 auto 0 0',\r\n    }\r\n\r\n}\r\n\r\nexport const AddBlockContextMenu: React.FC<addBlockMenuProps> = ({ className, children, args }) => {\r\n    const { addBlock, availableBlocks } = useEditor();\r\n\r\n    return (\r\n        <div className={clsx(\r\n            className\r\n        )}>\r\n            <DropdownMenu.Root>\r\n                <DropdownMenu.Trigger asChild>\r\n                    {children}\r\n                </DropdownMenu.Trigger>\r\n                <DropdownMenu.Content\r\n                    sideOffset={0}\r\n                    align=\"center\"\r\n                    className=\"sg-block__addMenu__content\"\r\n                >\r\n                    <DropdownMenu.Label\r\n                        className=\"sg-block__addMenu__label\"\r\n                    >\r\n                        Choisir un type\r\n                    </DropdownMenu.Label>\r\n                    {\r\n                        Object.values(availableBlocks).map((block) => {\r\n                            const Icon = block.icon;\r\n                            return (\r\n                                <DropdownMenu.Item\r\n                                    key={block.type}\r\n                                    onClick={() => addBlock(block.type, args)}\r\n                                    className=\"sg-block__addMenu__item\"\r\n                                >\r\n                                    {!!Icon && <Icon style={{ marginRight: '4px' }} />}\r\n                                    {block.name}\r\n                                </DropdownMenu.Item>\r\n                            )\r\n                        })\r\n                    }\r\n                </DropdownMenu.Content>\r\n            </DropdownMenu.Root>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst toolbarContext = createContext<[\r\n    ReactNode,\r\n    Dispatch<React.SetStateAction<React.ReactNode>>\r\n]>([\r\n    null,\r\n    () => {\r\n        throw new Error(\"Toolbar must be wrapped in context provider\")\r\n    }\r\n]);\r\n\r\nconst BlockToolbarProvider: React.FC<PropsWithChildren> = ({ children }) => {\r\n    const [toolbar, setToolbar] = useState<ReactNode>(null);\r\n    return (\r\n        <toolbarContext.Provider value={[toolbar, setToolbar]}>\r\n            {children}\r\n        </toolbarContext.Provider>\r\n    )\r\n}\r\n\r\nconst BlockToolbarRenderer: React.FC<{ position: 'top' | 'bottom', hasSpacingOptions?: boolean, block: EditorParsedBlock }> = ({ position, hasSpacingOptions, block }) => {\r\n    const [toolbar] = useContext(toolbarContext);\r\n\r\n    const { updateBlock } = useEditor();\r\n\r\n    const handleChangeSpacings = useCallback((spacingsValue: Record<string, string>) => {\r\n        updateBlock(blockID, {\r\n            value: {\r\n                spacings: spacingsValue\r\n            }\r\n        });\r\n    }, [updateBlock, block.blockID]);\r\n\r\n    const { value, blockID } = block;\r\n    const { spacings } = value ?? {};\r\n\r\n\r\n    return (\r\n        <div className={`sg-block__block__toolbar${position === 'top' ? ' sg-block__block__toolbar--top' : ''}`}>\r\n            {toolbar ?? null}\r\n            {hasSpacingOptions && <SpacingTool value={spacings} onChange={handleChangeSpacings} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ResizableWrapper: React.FC<PropsWithChildren<{ isResizable: boolean } & ResizableProps>> = ({ isResizable, children, ...props }) => {\r\n    return (\r\n        <Resizable\r\n            enable={props.enable || (isResizable ? undefined : false)}\r\n            className={props.className}\r\n            maxWidth={`100%`}\r\n            handleClasses={{\r\n                right: 'sg-block__block__resizeHandle sg-block__block__resizeHandle--right',\r\n                left: 'sg-block__block__resizeHandle sg-block__block__resizeHandle--left',\r\n                top: 'sg-block__block__resizeHandle sg-block__block__resizeHandle--top',\r\n                bottom: 'sg-block__block__resizeHandle sg-block__block__resizeHandle--bottom',\r\n\r\n            }}\r\n            size={{\r\n                width: props.size?.width || '100%',\r\n                height: props.size?.height || 'auto',\r\n            }}\r\n            style={props.style}\r\n            onResizeStop={props.onResizeStop}\r\n            onResize={props.onResize}\r\n            onResizeStart={props.onResizeStart}\r\n        >\r\n            {children}\r\n        </Resizable>\r\n    )\r\n}\r\n\r\nexport const BlockToolbar: React.FC<PropsWithChildren> = ({ children }) => {\r\n    const [, setToolbar] = useContext(toolbarContext);\r\n\r\n    useEffect(() => {\r\n        setToolbar(children);\r\n\r\n        return () => {\r\n            setToolbar(null);\r\n        };\r\n    }, [children]);\r\n\r\n    return null;\r\n}\r\n\r\nexport const BlockToolbarColumn: React.FC<PropsWithChildren<{ title: string }>> = ({ children, title }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"sg-block__block__toolbar__column__title\"><b>{title}</b></p>\r\n            <div className=\"sg-block__block__toolbar__column\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst Block: React.FC<{ block: EditorParsedBlock | undefined, className?: string, horizontalFlow?: boolean }> = ({ block, className, horizontalFlow }) => {\r\n    const [toolbarPosition, setToolbarPosition] = useState<'bottom' | 'top'>('bottom');\r\n\r\n    const { blocks, activeBlock, setActiveBlock, deleteBlock, availableBlocks, updateBlock } = useEditor();\r\n\r\n    const blockRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const { blockID, hasFocusWithin, parentID, type, value } = block ?? {};\r\n\r\n    const isActive = blockID === activeBlock;\r\n\r\n    const { isResizable, hasSpacingOptions, BlockEditorElement } = useMemo(() => {\r\n        if(!type) return {}\r\n        return {\r\n            isResizable: availableBlocks[type]?.isResizable || false,\r\n            hasSpacingOptions: !!availableBlocks[type]?.hasSpacingOptions,\r\n            BlockEditorElement: availableBlocks[type]?.editor\r\n        }\r\n    }, [availableBlocks, parentID]);\r\n\r\n    const scrollHandler = useCallback(() => {\r\n        const { top, bottom } = blockRef.current?.getBoundingClientRect() ?? {};\r\n        if (bottom !== undefined && top !== undefined) {\r\n            setToolbarPosition(window.innerHeight - bottom > top ? 'bottom' : 'top');\r\n        }\r\n    }, [blockRef, setToolbarPosition])\r\n\r\n    useEffect(() => {\r\n        if (blockRef.current) {\r\n            if (isActive) {\r\n                scrollHandler();\r\n                window.addEventListener('scroll', scrollHandler, true);\r\n                blockRef.current.focus();\r\n            } else {\r\n                window.removeEventListener('scroll', scrollHandler, true);\r\n            }\r\n        }\r\n\r\n        return () => window.removeEventListener('scroll', scrollHandler, true);\r\n\r\n    }, [isActive, blockRef]);\r\n\r\n    const handleClickCapture: MouseEventHandler<HTMLDivElement> = useCallback((e) => {\r\n        if (activeBlock !== blockID && !hasFocusWithin) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            setActiveBlock(blockID ?? null);\r\n        }\r\n    }, [activeBlock, hasFocusWithin, blockID, setActiveBlock]);\r\n\r\n    if (!block) return null;\r\n\r\n    if (!blockID) return null;\r\n\r\n    if (!BlockEditorElement) return null;\r\n\r\n    return (\r\n        <BlockToolbarProvider>\r\n            <div\r\n                ref={blockRef}\r\n                style={{\r\n                    display: 'contents'\r\n                }}\r\n\r\n                onClickCapture={handleClickCapture}\r\n            >\r\n\r\n                <ResizableWrapper\r\n                    isResizable={!!isResizable && isActive}\r\n                    size={{\r\n                        width: isResizable && value?.width ? value?.width : '100%',\r\n                        height: isResizable && value?.height ? value?.height : 'auto',\r\n                    }}\r\n                    enable={\r\n                        isActive && typeof isResizable === 'object' ? isResizable : undefined\r\n                    }\r\n\r\n                    onResizeStop={(e, dir, ref, d) => {\r\n                        const containerWidth = ref.parentElement?.parentElement?.clientWidth;\r\n                        const newWidth = ref.offsetWidth;\r\n                        const newHeight = ref.offsetHeight;\r\n\r\n                        updateBlock(blockID, {\r\n                            value: {\r\n                                width: newWidth === containerWidth ? '100%' : d.width !== 0 ? newWidth + 'px' : value?.width,\r\n                                height: d.height !== 0 ? newHeight + 'px' : value?.height,\r\n                            }\r\n                        });\r\n                    }}\r\n\r\n                    style={{\r\n                        alignSelf: value?.align ? alignStyles.alignSelf[value.align as 'left'|'right'|'center'] : undefined,\r\n                        margin: value?.align ? alignStyles.margin[value.align as 'left'|'right'|'center']: undefined,\r\n                        paddingTop: value?.spacings?.top,\r\n                        paddingBottom: value?.spacings?.bottom,\r\n                        paddingLeft: value?.spacings?.left,\r\n                        paddingRight: value?.spacings?.right\r\n                    }}\r\n                    className={clsx(\r\n                        'sg-block__block',\r\n                        !hasFocusWithin && !activeBlock && (!parentID || blocks.get(parentID)?.hasFocusWithin) ? 'sg-block__block--hover' : '',\r\n                        isActive ? 'sg-block__block--active' : '',\r\n                        (!hasFocusWithin && !isActive && activeBlock) && 'sg-block__block--inactive',\r\n                        className\r\n                    )}\r\n\r\n\r\n                >\r\n                    {isActive &&\r\n                        <>\r\n                            <AddBlockContextMenu\r\n                                args={{ position: 'before', reference: blockID, parentID }}\r\n                                className=\"sg-block__contextMenu\"\r\n                            >\r\n                                <button\r\n                                    title=\"Ajouter un élément avant le bloc actif\"\r\n                                    aria-label=\"Ajotuer un élément avant le bloc actif\"\r\n                                    className={`sg-block__btn__addBlock sg-block__btn__addBlock--${horizontalFlow ? 'left' : 'top'}`}\r\n                                >\r\n                                    <FaPlus />\r\n                                </button>\r\n                            </AddBlockContextMenu>\r\n\r\n\r\n                        </>\r\n                    }\r\n\r\n                    <BlockEditorElement block={block} isActive={isActive} />\r\n                    {isActive && <BlockToolbarRenderer position={toolbarPosition} hasSpacingOptions={hasSpacingOptions} block={block} />}\r\n\r\n                    {isActive &&\r\n                        <>\r\n                            <button\r\n                                className=\"sg-block__btn sg-block__btn--square sg-block__btn__deleteBlock\"\r\n                                onClick={() => deleteBlock(blockID)}\r\n                                aria-label={\"Supprimer le block actif: \" + type}\r\n                                title={\"Supprimer le block actif: \" + type}\r\n                            >\r\n                                <RiDeleteBin5Line />\r\n                            </button>\r\n                            <AddBlockContextMenu\r\n                                args={{ position: 'after', reference: blockID, parentID }}\r\n                                className=\"sg-block__contextMenu\"\r\n                            >\r\n                                <button\r\n                                    title=\"Ajouter un élément après le bloc actif\"\r\n                                    aria-label=\"Ajouter un élément après le bloc actif\"\r\n                                    className={`sg-block__btn__addBlock sg-block__btn__addBlock--${horizontalFlow ? 'right' : 'bottom'}`}\r\n                                >\r\n                                    <FaPlus />\r\n                                </button>\r\n                            </AddBlockContextMenu>\r\n                        </>\r\n                    }\r\n                </ResizableWrapper>\r\n            </div>\r\n        </BlockToolbarProvider>\r\n    )\r\n}\r\n\r\nexport default Block;","import React, { KeyboardEvent, useRef, useState } from \"react\";\r\n\r\ntype SpacingToolState = {\r\n    [key: string]: any;\r\n    left?: string;\r\n    right?: string;\r\n    bottom?: string;\r\n    top?: string;\r\n}\r\n\r\ntype SpacingToolProps = {\r\n    value?: SpacingToolState,\r\n    onChange?: (value: SpacingToolState) => void,\r\n}\r\n\r\nconst SpacingTool: React.FC<SpacingToolProps> = ({ value, onChange }) => {\r\n\r\n    const [spacings, setSpacings] = useState<SpacingToolState>(value ?? {});\r\n    const directions = [\r\n        'left',\r\n        'right',\r\n        'bottom',\r\n        'top'\r\n    ]\r\n\r\n    const spacingToolRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleChange = (direction: typeof directions[number], value: string) => {\r\n        const newSpacings = {\r\n            ...spacings, [direction]: value\r\n        }\r\n        setSpacings(newSpacings);\r\n    }\r\n\r\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            spacingToolRef.current?.querySelectorAll('input').forEach((el) => {\r\n                el.blur();\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p><b>Marges</b></p>\r\n            <div className=\"sg-block__SpacingTool\" ref={spacingToolRef}>\r\n\r\n                {directions.map((direction) => {\r\n                    return (\r\n                        <div\r\n                            key={direction}\r\n                            className={`sg-block__SpacingTool__${direction}`}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(e) => handleChange(direction, e.target.value)}\r\n                                onBlur={() => onChange?.(spacings)}\r\n                                onKeyDown={(e) => handleKeyDown(e)}\r\n                                value={spacings[direction] ?? '0px'}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n                <div className=\"sg-block__SpacingTool__center\" />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SpacingTool;","import ImageBlock from \"./blocks/ImageBlock\";\r\nimport { FaRegImage } from \"react-icons/fa6\";\r\nimport { FaAlignJustify } from \"react-icons/fa6\";\r\nimport { RxGroup } from \"react-icons/rx\";\r\nimport TextBlock from \"./blocks/TextBlock\";\r\nimport RowBlock from \"./blocks/GroupBlock\";\r\nimport { EditorBlock } from \"./definitions\";\r\n\r\nexport default {\r\n    text: {\r\n        name: 'Text',\r\n        type: 'text',\r\n        icon: FaAlignJustify,\r\n        render: undefined,\r\n        editor: TextBlock,\r\n        defaultValue: {\r\n            htmlContent: '<p>Nouveau Bloc de Texte</p>'\r\n        },\r\n        isResizable: {\r\n            right: true,\r\n            left: true,\r\n            top: false,\r\n            bottom: false,\r\n            bottomLeft: false,\r\n            bottomRight: false,\r\n            topLeft: false,\r\n            topRight: false\r\n        },\r\n        hasSpacingOptions: true\r\n    },\r\n    image: {\r\n        name: 'Image',\r\n        type: 'image',\r\n        icon: FaRegImage,\r\n        render: undefined,\r\n        editor: ImageBlock,\r\n        isResizable: true,\r\n        hasSpacingOptions: true\r\n    },\r\n    group: {\r\n        name: 'Group',\r\n        type: 'group',\r\n        icon: RxGroup,\r\n        render: undefined,\r\n        editor: RowBlock,\r\n        acceptChildren: true,\r\n        isResizable: false,\r\n        defaultValue: {\r\n            flow: 'horizontal'\r\n        },\r\n        hasSpacingOptions: true\r\n    }\r\n} as { [key: string]: EditorBlock }","import React, { RefObject } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useCallback, useEffect, useRef } from \"react\";\r\nimport { BlockType, EditorParsedBlock } from \"../definitions\";\r\nimport { useEditor } from \"../context\";\r\n\r\nimport TextIgniter from \"../../lib/text-module/component/src/components/TextIgniter\";\r\n\r\ntype TextBlockType = BlockType<{\r\n    htmlContent: string;\r\n}>\r\n\r\nconst TextBlock: React.FC<{ block: EditorParsedBlock<TextBlockType>, isActive?: boolean }> = ({ block, isActive }) => {\r\n\r\n    // define text editor features\r\n    const features = [\r\n        \"heading\",\r\n        \"bold\",\r\n        \"italic\",\r\n        \"underline\",\r\n        \"unorderedList\",\r\n        \"justifyLeft\",\r\n        \"justifyCenter\",\r\n        \"justifyRight\",\r\n        \"createLink\",\r\n    ];\r\n\r\n    const { updateBlock } = useEditor();\r\n\r\n    const { blockID, value } = block;\r\n\r\n    const { htmlContent } = value ?? {};\r\n\r\n    const editorRef = useRef<{editorRef: RefObject<HTMLDivElement>|undefined }|null>(null);\r\n\r\n    useEffect(() => {\r\n        if(editorRef.current?.editorRef?.current && isActive) {\r\n            editorRef.current.editorRef.current.focus();        \r\n        }\r\n    }, [isActive])\r\n\r\n    useEffect(() => {\r\n        if(editorRef.current?.editorRef?.current) {\r\n            const preventDefault = (e: Event) => e.preventDefault();\r\n            editorRef.current.editorRef.current.addEventListener(\"dragover\", preventDefault);\r\n            editorRef.current.editorRef.current.addEventListener(\"drop\", preventDefault);\r\n\r\n            return () => {\r\n                editorRef.current?.editorRef?.current?.removeEventListener(\"dragover\", preventDefault);\r\n                editorRef.current?.editorRef?.current?.removeEventListener(\"drop\", preventDefault);\r\n            }\r\n\r\n        }\r\n    }, [editorRef.current])\r\n\r\n    const handleChange = useCallback((val: string) => {\r\n        updateBlock(blockID, {\r\n            value: {\r\n                htmlContent: val\r\n            }\r\n        })\r\n    }, [blockID, updateBlock]);\r\n\r\n    return (\r\n        <>\r\n            <div className={clsx(\r\n                \"sg-block__blockText\",\r\n                isActive && \"sg-block__blockText--active\"\r\n            )}>\r\n                <TextIgniter\r\n                    ref={editorRef}\r\n                    //@ts-expect-error js ignore\r\n                    onChange={handleChange}\r\n                    defaultContent={htmlContent}\r\n                    features={features}\r\n                    height={\"100%\"}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TextBlock;","/* eslint-disable react/display-name */\r\nimport React, {\r\n  useImperativeHandle,\r\n  forwardRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport { EditorProvider, useEditor } from \"../../contexts/editorContext.jsx\";\r\nimport Toolbar from \"./Toolbar.jsx\";\r\nimport Editor from \"./Editor.jsx\";\r\nimport \"../../styles/text-igniter.css\";\r\n\r\nconst TextIgniterContent = forwardRef(\r\n  ({ features, height, onChange, defaultContent }, ref) => {\r\n    const { getHtml, getJson, html, editorRef } = useEditor();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      getHtml,\r\n      getJson,\r\n      html,\r\n      editorRef,\r\n    }));\r\n\r\n    useEffect(() => {\r\n      \r\n      if (editorRef?.current && !!defaultContent) {\r\n       editorRef.current.innerHTML = defaultContent;\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      html !== null && onChange && typeof onChange === \"function\" ? onChange(html) : undefined;\r\n    }, [html, onChange]);\r\n\r\n    return (\r\n      <div className=\"editor-container\">\r\n        <Toolbar features={features} />\r\n        <Editor height={height} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst TextIgniter = forwardRef((props, ref) => (\r\n  <EditorProvider>\r\n    <TextIgniterContent {...props} ref={ref} />\r\n  </EditorProvider>\r\n));\r\n\r\nexport default TextIgniter;\r\n","import React, { createContext, useContext, useRef, useCallback } from \"react\";\r\nimport { useEditorFormatting } from \"../hooks/useEditorFormatting.jsx\";\r\nimport { useEditorState } from \"../hooks/useEditorState.jsx\";\r\nimport { useTableOperations } from \"../hooks/useTableOperation.jsx\";\r\nimport { useHeadingState } from \"../hooks/useHeadingState.jsx\";\r\nconst EditorContext = createContext();\r\n\r\nexport const EditorProvider = ({ children }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  const {\r\n    formatText,\r\n    updateDataAttributes,\r\n    addImageOrVideo,\r\n    addLink,\r\n    activeStyles,\r\n    applyHeading\r\n  } = useEditorFormatting(editorRef);\r\n\r\n  const state = useEditorState(editorRef, updateDataAttributes);\r\n  const { insertTable, addTableRow, addTableColumn, insertLayout } = useTableOperations(editorRef);\r\n  const headingState = useHeadingState();\r\n  \r\n  const getHtml = useCallback(() => {\r\n    return editorRef.current ? editorRef.current.innerHTML : '';\r\n  }, [editorRef]);\r\n\r\n  const getJson = useCallback(() => {\r\n    if (!editorRef.current) return null;\r\n\r\n    const parseNode = (node) => {\r\n      if (node.nodeType === Node.TEXT_NODE) {\r\n        return node.textContent;\r\n      }\r\n\r\n      const result = {\r\n        type: node.nodeName.toLowerCase(),\r\n        attributes: {},\r\n        children: []\r\n      };\r\n\r\n      // Parse attributes\r\n      for (let i = 0; i < node.attributes.length; i++) {\r\n        const attr = node.attributes[i];\r\n        result.attributes[attr.name] = attr.value;\r\n      }\r\n\r\n      // Parse children\r\n      node.childNodes.forEach(child => {\r\n        result.children.push(parseNode(child));\r\n      });\r\n\r\n      return result;\r\n    };\r\n\r\n    return parseNode(editorRef.current);\r\n  }, []);\r\n\r\n  const editorValue = {\r\n    ...state,\r\n    ...headingState,\r\n    applyHeading,\r\n    formatText,\r\n    editorRef,\r\n    addImageOrVideo,\r\n    addLink,\r\n    insertTable,\r\n    addTableRow,\r\n    addTableColumn,\r\n    insertLayout,\r\n    activeStyles,\r\n    getHtml,\r\n    getJson,\r\n  };\r\n\r\n  return (\r\n    <EditorContext.Provider value={editorValue}>\r\n      {children}\r\n    </EditorContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEditor = () => useContext(EditorContext);","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nexport const useEditorFormatting = (editorRef) => {\r\n  const [activeStyles, setActiveStyles] = useState([\"justifyLeft\"]); // Set initial justifyLeft\r\n\r\n  const updateDataAttributes = useCallback((element) => {\r\n    const styles = window.getComputedStyle(element);\r\n    const dataType = [];\r\n\r\n    if (styles.fontWeight === \"bold\" || parseInt(styles.fontWeight) >= 600)\r\n      dataType.push(\"bold\");\r\n    if (styles.fontStyle === \"italic\") dataType.push(\"italic\");\r\n    if (styles.textDecoration.includes(\"underline\")) dataType.push(\"underline\");\r\n    if (styles.textAlign === \"left\") dataType.push(\"justifyLeft\");\r\n    if (styles.textAlign === \"center\") dataType.push(\"justifyCenter\");\r\n    if (styles.textAlign === \"right\") dataType.push(\"justifyRight\");\r\n\r\n    element.setAttribute(\"data-type\", dataType.join(\"-\") || \"normal\");\r\n  }, []);\r\n\r\n  const updateActiveStyles = useCallback(() => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      const styles = new Set();\r\n      const selection = window.getSelection();\r\n\r\n      if (selection.rangeCount > 0) {\r\n        const range = selection.getRangeAt(0);\r\n        const parentElement =\r\n          range.commonAncestorContainer.nodeType === Node.TEXT_NODE\r\n            ? range.commonAncestorContainer.parentElement\r\n            : range.commonAncestorContainer;\r\n\r\n        // Check text formatting\r\n        if (document.queryCommandState(\"bold\")) styles.add(\"bold\");\r\n        if (document.queryCommandState(\"italic\")) styles.add(\"italic\");\r\n        if (document.queryCommandState(\"underline\")) styles.add(\"underline\");\r\n\r\n        // Check list style (only one can be active)\r\n        if (document.queryCommandState(\"insertOrderedList\")) {\r\n          styles.add(\"orderedList\");\r\n        } else if (document.queryCommandState(\"insertUnorderedList\")) {\r\n          styles.add(\"unorderedList\");\r\n        }\r\n\r\n        // Check justification (only one can be active)\r\n        const computedStyle = window.getComputedStyle(parentElement);\r\n        const textAlign = computedStyle.textAlign;\r\n        if (textAlign === \"left\" || textAlign === \"start\") {\r\n          styles.add(\"justifyLeft\");\r\n        } else if (textAlign === \"center\") {\r\n          styles.add(\"justifyCenter\");\r\n        } else if (textAlign === \"right\") {\r\n          styles.add(\"justifyRight\");\r\n        }\r\n      }\r\n      // Check superscript and subscript (only one can be active)\r\n      if (document.queryCommandState(\"superscript\")) {\r\n        styles.add(\"superscript\");\r\n      } else if (document.queryCommandState(\"subscript\")) {\r\n        styles.add(\"subscript\");\r\n      }\r\n\r\n      setActiveStyles(Array.from(styles));\r\n    }\r\n  }, [editorRef]);\r\n\r\n  const formatText = useCallback(\r\n    (command, value = null) => {\r\n      const editor = editorRef.current;\r\n      if (editor) {\r\n        if (command.startsWith(\"justify\")) {\r\n          // Remove all justify styles before applying the new one\r\n          [\"justifyLeft\", \"justifyCenter\", \"justifyRight\"].forEach((style) => {\r\n            if (style !== command) {\r\n              document.execCommand(style, false, null);\r\n            }\r\n          });\r\n        } else if (\r\n          command === \"insertOrderedList\" ||\r\n          command === \"insertUnorderedList\"\r\n        ) {\r\n          // Remove the other list style before applying the new one\r\n          const otherListCommand =\r\n            command === \"insertOrderedList\"\r\n              ? \"insertUnorderedList\"\r\n              : \"insertOrderedList\";\r\n          if (document.queryCommandState(otherListCommand)) {\r\n            document.execCommand(otherListCommand, false, null);\r\n          }\r\n        } else if (command === \"superscript\" || command === \"subscript\") {\r\n          // Remove the other script style before applying the new one\r\n          const otherScriptCommand =\r\n            command === \"superscript\" ? \"subscript\" : \"superscript\";\r\n          if (document.queryCommandState(otherScriptCommand)) {\r\n            document.execCommand(otherScriptCommand, false, null);\r\n          }\r\n        }\r\n\r\n        document.execCommand(command, false, value);\r\n        updateActiveStyles();\r\n        editor.dispatchEvent(new Event('change'));\r\n      }\r\n    },\r\n    [editorRef, updateActiveStyles]\r\n  );\r\n\r\n  const addImageOrVideo = useCallback(\r\n    (file, fileUrl) => {\r\n      const editor = editorRef.current;\r\n      if (editor) {\r\n        let element;\r\n        if (file) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            if (file.type.startsWith(\"image/\")) {\r\n              element = document.createElement(\"img\");\r\n              element.src = e.target.result;\r\n              element.alt = file.name;\r\n            } else if (file.type.startsWith(\"video/\")) {\r\n              element = document.createElement(\"video\");\r\n              element.src = e.target.result;\r\n              element.controls = true;\r\n            }\r\n            editor.appendChild(element);\r\n            editor.appendChild(document.createElement(\"br\"));\r\n            updateActiveStyles();\r\n          };\r\n          reader.readAsDataURL(file);\r\n        } else if (fileUrl) {\r\n          if (fileUrl.match(/\\.(jpeg|jpg|gif|png)$/)) {\r\n            element = document.createElement(\"img\");\r\n            element.src = fileUrl;\r\n            element.alt = \"Inserted image\";\r\n          } else if (fileUrl.match(/\\.(mp4|webm|ogg)$/)) {\r\n            element = document.createElement(\"video\");\r\n            element.src = fileUrl;\r\n            element.controls = true;\r\n          }\r\n          editor.appendChild(element);\r\n          editor.appendChild(document.createElement(\"br\"));\r\n          updateActiveStyles();\r\n        }\r\n      }\r\n    },\r\n    [editorRef, updateActiveStyles]\r\n  );\r\n\r\n  const addLink = useCallback(\r\n    (linkText, linkUrl) => {\r\n      const editor = editorRef.current;\r\n      if (editor) {\r\n        // Focus the editor to ensure the link is inserted at the right position\r\n        editor.focus();\r\n\r\n        // Create an anchor element instead of button\r\n        const linkElement = document.createElement(\"a\");\r\n        linkElement.textContent = linkText;\r\n        linkElement.href = linkUrl;\r\n        linkElement.target = \"_blank\";\r\n        linkElement.rel = \"noopener noreferrer\"; // Prevent security issues\r\n        linkElement.className = \"link-btn\";\r\n        editor.appendChild(linkElement);\r\n        editor.appendChild(document.createElement(\"br\"));\r\n\r\n        updateActiveStyles();\r\n      }\r\n    },\r\n    [editorRef, updateActiveStyles]\r\n  );\r\n\r\n  const applyHeading = useCallback(\r\n    (heading) => {\r\n      const editor = editorRef.current;\r\n      if (editor) {\r\n        // Use execCommand to change the format block to the specified heading\r\n        document.execCommand(\"formatBlock\", false, heading);\r\n\r\n        // Update active styles to reflect the changes\r\n        updateActiveStyles();\r\n      }\r\n    },\r\n    [editorRef, updateActiveStyles]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      // Handle link clicks to open them in a new tab\r\n      const handleLinkClick = (e) => {\r\n        const target = e.target;\r\n        // The element that was clicked is checked to see if it’s an <a> (anchor) tag.\r\n        if (target.tagName === \"A\") {\r\n          e.preventDefault(); // Prevent default editing behavior\r\n          window.open(target.href, \"_blank\", \"noopener,noreferrer\"); // Open the link in a new tab\r\n        }\r\n      };\r\n\r\n      editor.addEventListener(\"keyup\", updateActiveStyles);\r\n      editor.addEventListener(\"mouseup\", updateActiveStyles);\r\n      // Attach the click event listener to the editor for anchor elements\r\n      editor.addEventListener(\"click\", handleLinkClick);\r\n\r\n      // Cleanup event listeners when the component unmounts or the editor changes\r\n      return () => {\r\n        editor.removeEventListener(\"keyup\", updateActiveStyles);\r\n        editor.removeEventListener(\"mouseup\", updateActiveStyles);\r\n        editor.removeEventListener(\"click\", handleLinkClick);\r\n      };\r\n    }\r\n  }, [editorRef, updateActiveStyles]);\r\n\r\n  return {\r\n    formatText,\r\n    updateDataAttributes,\r\n    addImageOrVideo,\r\n    addLink,\r\n    applyHeading,\r\n    activeStyles,\r\n  };\r\n};\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nconst initialState = { wordCount: 0, charCount: 0, html: null };\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COUNTS\":\r\n      return {\r\n        ...state,\r\n        wordCount: action.wordCount,\r\n        charCount: action.charCount,\r\n      };\r\n    case \"UPDATE_HTML\":\r\n      return {\r\n        ...state,\r\n        html: action.html,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useEditorState = (editorRef, updateDataAttributes) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const editor = editorRef.current;\r\n    let editorChangedHtml = state.html;\r\n\r\n    const handleInput = () => {\r\n      const text = editor.innerText || \"\";\r\n      const words = text\r\n        .trim()\r\n        .split(/\\s+/)\r\n        .filter((word) => word.length > 0);\r\n\r\n      dispatch({\r\n        type: \"SET_COUNTS\",\r\n        wordCount: words.length,\r\n        charCount: text.length,\r\n      });\r\n\r\n      updateDataAttributes(editor);\r\n\r\n      handleChange();\r\n    };\r\n\r\n    const handleChange = () => {\r\n      const newHtml = editor.innerHTML || \"\";\r\n\r\n      if (editorChangedHtml !== newHtml) {\r\n        editorChangedHtml = newHtml;\r\n\r\n        dispatch({\r\n          type: \"UPDATE_HTML\",\r\n          html: newHtml,\r\n        });\r\n      }\r\n    };\r\n\r\n    editor.addEventListener(\"input\", handleInput);\r\n    editor.addEventListener(\"change\", handleChange);\r\n\r\n    return () => {\r\n      editor.removeEventListener(\"input\", handleInput);\r\n      editor.removeEventListener(\"change\", handleChange);\r\n    };\r\n  }, [editorRef, updateDataAttributes]);\r\n\r\n  return state;\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTableOperations = (editorRef) => {\r\n  const insertTable = useCallback((rows = 2, cols = 2) => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      const table = document.createElement('table');\r\n      table.style.width = '100%';\r\n      table.style.border = '1px solid #ccc';\r\n      table.style.borderCollapse = 'collapse';\r\n\r\n      for (let i = 0; i < rows; i++) {\r\n        const row = table.insertRow();\r\n        for (let j = 0; j < cols; j++) {\r\n          const cell = row.insertCell();\r\n          cell.style.border = '1px solid #ccc';\r\n          cell.style.padding = '5px';\r\n          cell.style.height = '30px';\r\n          cell.style.width = `${100 / cols}%`;\r\n          cell.contentEditable = true;\r\n        }\r\n      }\r\n\r\n      editor.appendChild(table);\r\n      editor.appendChild(document.createElement('br'));\r\n      editor.dispatchEvent(new Event('change'));\r\n    }\r\n  }, [editorRef]);\r\n\r\n  const addTableRow = useCallback(() => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      const table = editor.querySelector('table');\r\n      if (table) {\r\n        const newRow = table.insertRow();\r\n        const cellCount = table.rows[0].cells.length;\r\n        for (let i = 0; i < cellCount; i++) {\r\n          const cell = newRow.insertCell();\r\n          cell.style.border = '1px solid #ccc';\r\n          cell.style.padding = '5px';\r\n          cell.style.height = '30px';\r\n          cell.contentEditable = true;\r\n        }\r\n      }\r\n      editor.dispatchEvent(new Event('change'));\r\n    }\r\n  }, [editorRef]);\r\n\r\n  const addTableColumn = useCallback(() => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      const table = editor.querySelector('table');\r\n      if (table) {\r\n        const rowCount = table.rows.length;\r\n        for (let i = 0; i < rowCount; i++) {\r\n          const cell = table.rows[i].insertCell();\r\n          cell.style.border = '1px solid #ccc';\r\n          cell.style.padding = '5px';\r\n          cell.style.height = '30px';\r\n          cell.contentEditable = true;\r\n        }\r\n        const cellCount = table.rows[0].cells.length;\r\n        for (let i = 0; i < rowCount; i++) {\r\n          for (let j = 0; j < cellCount; j++) {\r\n            table.rows[i].cells[j].style.width = `${100 / cellCount}%`;\r\n          }\r\n        }\r\n      }\r\n      editor.dispatchEvent(new Event('change'));\r\n    }\r\n  }, [editorRef]);\r\n\r\n  const insertLayout = useCallback((columns) => {\r\n    const editor = editorRef.current;\r\n    if (editor) {\r\n      const table = document.createElement('table');\r\n      table.className = 'layout-table';\r\n      table.style.width = '100%';\r\n      table.style.border = '1px solid #ccc';\r\n      table.style.borderCollapse = 'collapse';\r\n\r\n      const row = table.insertRow();\r\n      columns.forEach((colWidth) => {\r\n        const cell = row.insertCell();\r\n        cell.style.border = '1px solid #ccc';\r\n        cell.style.padding = '5px';\r\n          cell.style.height = '30px';\r\n        cell.style.width = `${colWidth}%`;\r\n        cell.contentEditable = true;\r\n      });\r\n\r\n      editor.appendChild(table);\r\n      editor.appendChild(document.createElement('br'));\r\n      editor.dispatchEvent(new Event('change'));\r\n    }\r\n  }, [editorRef]);\r\n\r\n  return { insertTable, addTableRow, addTableColumn, insertLayout };\r\n};\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHeadingState = () => {\r\n  const [currentHeading, setCurrentHeading] = useState(\"p\");\r\n\r\n  const changeHeading = useCallback((heading) => {\r\n    setCurrentHeading(heading);\r\n\r\n    // Use execCommand to change the format block to the specified heading\r\n    document.execCommand(\"formatBlock\", false, heading);\r\n  }, []);\r\n\r\n  return { currentHeading, changeHeading };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useEditor } from \"../../contexts/editorContext.jsx\";\r\nimport * as Icons from \"../../assets/icon.jsx\";\r\nimport { IconButton } from \"../ui/Button.jsx\";\r\nimport { ImageUploadSelectionDialog, FileUrlDialog } from \"../ui/Dialog.jsx\";\r\nimport { IconDropDown } from \"../ui/Dropdown.jsx\";\r\nimport { usePreviewMode } from \"../../hooks/usePreviewMode.jsx\";\r\nconst Toolbar = ({ features }) => {\r\n  const {\r\n    formatText,\r\n    insertTable,\r\n    addTableRow,\r\n    addTableColumn,\r\n    insertLayout,\r\n    addImageOrVideo,\r\n    addLink,\r\n    activeStyles,\r\n    changeHeading,\r\n    applyHeading,\r\n  } = useEditor();\r\n\r\n  const { isToolbarVisible, toggleToolbarVisibility } = usePreviewMode();\r\n\r\n  const [isImageDialogOpen, setImageDialogOpen] = useState(false);\r\n  const [isUrlDialogOpen, setUrlDialogOpen] = useState(false);\r\n\r\n  const handleImageSubmit = ({ file, fileUrl }) => {\r\n    addImageOrVideo(file, fileUrl);\r\n  };\r\n  const handleHeadingChange = (e) => {\r\n    const heading = e;\r\n    changeHeading(heading);\r\n    applyHeading(heading);\r\n  };\r\n\r\n  const handleTableOperation = (operation) => {\r\n    switch (operation) {\r\n      case \"insert\":\r\n        insertTable(2, 2);\r\n        break;\r\n      case \"addRow\":\r\n        addTableRow();\r\n        break;\r\n      case \"addColumn\":\r\n        addTableColumn();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleLayoutOperation = (layout) => {\r\n    switch (layout) {\r\n      case \"single\":\r\n        insertLayout([100]);\r\n        break;\r\n      case \"two-equal\":\r\n        insertLayout([50, 50]);\r\n        break;\r\n      case \"three-equal\":\r\n        insertLayout([33.33, 33.33, 33.33]);\r\n        break;\r\n      case \"40-60\":\r\n        insertLayout([40, 60]);\r\n        break;\r\n      case \"60-40\":\r\n        insertLayout([60, 40]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getIsActive = (style) => activeStyles.includes(style);\r\n\r\n  const featureButtons = {\r\n    bold: (\r\n      <IconButton\r\n        onClick={() => formatText(\"bold\")}\r\n        toolTip=\"Bold\"\r\n        isActive={getIsActive(\"bold\")}\r\n      >\r\n        <Icons.BoldIcon />\r\n      </IconButton>\r\n    ),\r\n    italic: (\r\n      <IconButton\r\n        onClick={() => formatText(\"italic\")}\r\n        toolTip=\"Italic\"\r\n        isActive={getIsActive(\"italic\")}\r\n      >\r\n        <Icons.ItalicIcon />\r\n      </IconButton>\r\n    ),\r\n    underline: (\r\n      <IconButton\r\n        onClick={() => formatText(\"underline\")}\r\n        toolTip=\"Underline\"\r\n        isActive={getIsActive(\"underline\")}\r\n      >\r\n        <Icons.UnderlineIcon />\r\n      </IconButton>\r\n    ),\r\n    orderedList: (\r\n      <IconButton\r\n        onClick={() => formatText(\"insertOrderedList\")}\r\n        toolTip=\"Ordered List\"\r\n        isActive={getIsActive(\"orderedList\")}\r\n      >\r\n        <Icons.OrderedListIcon />\r\n      </IconButton>\r\n    ),\r\n    unorderedList: (\r\n      <IconButton\r\n        onClick={() => formatText(\"insertUnorderedList\")}\r\n        toolTip=\"Unordered List\"\r\n        isActive={getIsActive(\"unorderedList\")}\r\n      >\r\n        <Icons.UnOrderedListIcon />\r\n      </IconButton>\r\n    ),\r\n    justifyLeft: (\r\n      <IconButton\r\n        onClick={() => formatText(\"justifyLeft\")}\r\n        toolTip=\"Justify Left\"\r\n        isActive={getIsActive(\"justifyLeft\")}\r\n      >\r\n        <Icons.AlignLeftIcon />\r\n      </IconButton>\r\n    ),\r\n    justifyCenter: (\r\n      <IconButton\r\n        onClick={() => formatText(\"justifyCenter\")}\r\n        toolTip=\"Justify Center\"\r\n        isActive={getIsActive(\"justifyCenter\")}\r\n      >\r\n        <Icons.AlignCenterIcon />\r\n      </IconButton>\r\n    ),\r\n    justifyRight: (\r\n      <IconButton\r\n        onClick={() => formatText(\"justifyRight\")}\r\n        toolTip=\"Justify Right\"\r\n        isActive={getIsActive(\"justifyRight\")}\r\n      >\r\n        <Icons.AlignRightIcon />\r\n      </IconButton>\r\n    ),\r\n    createLink: (\r\n      <>\r\n        <IconButton\r\n          onClick={() => setUrlDialogOpen(true)}\r\n          toolTip=\"Create Link\"\r\n          isActive={getIsActive(\"createLink\")}\r\n        >\r\n          <Icons.LinkIcon />\r\n        </IconButton>\r\n        <FileUrlDialog\r\n          isOpen={isUrlDialogOpen}\r\n          onClose={() => setUrlDialogOpen(false)}\r\n          title=\"Provide URL\"\r\n          linkText=\"\"\r\n          link=\"\"\r\n          onSubmit={(data) => addLink(data.text, data.url)}\r\n        />\r\n      </>\r\n    ),\r\n    insertImage: (\r\n      <>\r\n        <IconButton\r\n          onClick={() => setImageDialogOpen(true)}\r\n          toolTip=\"Insert Image/Video\"\r\n          isActive={getIsActive(\"insertImage\")}\r\n        >\r\n          <Icons.ImageIcon />\r\n        </IconButton>\r\n        <ImageUploadSelectionDialog\r\n          isOpen={isImageDialogOpen}\r\n          onClose={() => setImageDialogOpen(false)}\r\n          title=\"Select Image/Video file\"\r\n          onSubmit={handleImageSubmit}\r\n        />\r\n      </>\r\n    ),\r\n    superscript: (\r\n      <IconButton\r\n        onClick={() => formatText(\"superscript\")}\r\n        toolTip=\"Superscript\"\r\n        isActive={getIsActive(\"superscript\")}\r\n      >\r\n        <Icons.SuperScriptIcon />\r\n      </IconButton>\r\n    ),\r\n    subscript: (\r\n      <IconButton\r\n        onClick={() => formatText(\"subscript\")}\r\n        toolTip=\"Subscript\"\r\n        isActive={getIsActive(\"subscript\")}\r\n      >\r\n        <Icons.SubScriptIcon />\r\n      </IconButton>\r\n    ),\r\n    table: (\r\n      <IconDropDown\r\n        id=\"tableDropdown\"\r\n        icon={<Icons.TableIcon />}\r\n        toolTip={\"Table\"}\r\n        items={[\r\n          { value: \"insert\", label: \"Insert Table\" },\r\n          { value: \"addRow\", label: \"Add Row\" },\r\n          { value: \"addColumn\", label: \"Add Column\" },\r\n        ]}\r\n        onChange={handleTableOperation}\r\n      />\r\n    ),\r\n    layout: (\r\n      <IconDropDown\r\n        id=\"layoutDropdown\"\r\n        icon={<Icons.LayoutIcon />}\r\n        toolTip={\"Layout\"}\r\n        items={[\r\n          { value: \"single\", label: \"Single Column\" },\r\n          { value: \"two-equal\", label: \"Two Equal Columns\" },\r\n          { value: \"three-equal\", label: \"Three Equal Columns\" },\r\n          { value: \"40-60\", label: \"40-60\" },\r\n          { value: \"60-40\", label: \"60-40\" },\r\n        ]}\r\n        onChange={handleLayoutOperation}\r\n      />\r\n    ),\r\n    heading: (\r\n      <IconDropDown\r\n        icon={<Icons.HeadingIcon />}\r\n        items={[\r\n          { value: \"p\", label: \"Paragraph\" },\r\n          { value: \"h1\", label: \"Heading 1\" },\r\n          { value: \"h2\", label: \"Heading 2\" },\r\n          { value: \"h3\", label: \"Heading 3\" },\r\n          { value: \"h4\", label: \"Heading 4\" },\r\n          { value: \"h5\", label: \"Heading 5\" },\r\n          { value: \"h6\", label: \"Heading 6\" },\r\n        ]}\r\n        onChange={handleHeadingChange}\r\n        toolTip={\"Headings\"}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"toolbar-switch\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isToolbarVisible}\r\n            onChange={toggleToolbarVisibility}\r\n          />\r\n          {!isToolbarVisible ? \"Preview Mode\" : \"Edit Mode\"}\r\n        </label>\r\n      </div>\r\n      {!isToolbarVisible &&\r\n        features.map((feature, index) => (\r\n          <React.Fragment key={index}>{featureButtons[feature]}</React.Fragment>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nexport const CloseIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"m16.192 6.344-4.243 4.242-4.242-4.242-1.414 1.414L10.535 12l-4.242 4.242 1.414 1.414 4.242-4.242 4.243 4.242 1.414-1.414L13.364 12l4.242-4.242z\"></path>\r\n  </svg>\r\n);\r\nexport const BoldIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M17.061 11.22A4.46 4.46 0 0 0 18 8.5C18 6.019 15.981 4 13.5 4H6v15h8c2.481 0 4.5-2.019 4.5-4.5a4.48 4.48 0 0 0-1.439-3.28zM13.5 7c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5H9V7h4.5zm.5 9H9v-3h5c.827 0 1.5.673 1.5 1.5S14.827 16 14 16z\"></path>\r\n  </svg>\r\n);\r\nexport const ItalicIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M19 7V4H9v3h2.868L9.012 17H5v3h10v-3h-2.868l2.856-10z\"></path>\r\n  </svg>\r\n);\r\nexport const UnderlineIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M5 18h14v2H5zM6 4v6c0 3.309 2.691 6 6 6s6-2.691 6-6V4h-2v6c0 2.206-1.794 4-4 4s-4-1.794-4-4V4H6z\"></path>\r\n  </svg>\r\n);\r\nexport const AlignLeftIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6ZM3 12C3 11.4477 3.44772 11 4 11H14C14.5523 11 15 11.4477 15 12C15 12.5523 14.5523 13 14 13H4C3.44772 13 3 12.5523 3 12ZM3 18C3 17.4477 3.44772 17 4 17H18C18.5523 17 19 17.4477 19 18C19 18.5523 18.5523 19 18 19H4C3.44772 19 3 18.5523 3 18Z\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const AlignCenterIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6ZM7 12C7 11.4477 7.44772 11 8 11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H8C7.44772 13 7 12.5523 7 12ZM5 18C5 17.4477 5.44772 17 6 17H18C18.5523 17 19 17.4477 19 18C19 18.5523 18.5523 19 18 19H6C5.44772 19 5 18.5523 5 18Z\"\r\n    ></path>{\" \"}\r\n  </svg>\r\n);\r\nexport const AlignRightIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6ZM9 12C9 11.4477 9.44772 11 10 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H10C9.44772 13 9 12.5523 9 12ZM5 18C5 17.4477 5.44772 17 6 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H6C5.44772 19 5 18.5523 5 18Z\"\r\n    ></path>{\" \"}\r\n  </svg>\r\n);\r\nexport const MenuIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"></path>\r\n  </svg>\r\n);\r\nexport const UnOrderedListIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M4 6h2v2H4zm0 5h2v2H4zm0 5h2v2H4zm16-8V6H8.023v2H18.8zM8 11h12v2H8zm0 5h12v2H8z\"></path>\r\n  </svg>\r\n);\r\nexport const OrderedListIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M5.282 12.064c-.428.328-.72.609-.875.851-.155.24-.249.498-.279.768h2.679v-.748H5.413c.081-.081.152-.151.212-.201.062-.05.182-.142.361-.27.303-.218.511-.42.626-.604.116-.186.173-.375.173-.578a.898.898 0 0 0-.151-.512.892.892 0 0 0-.412-.341c-.174-.076-.419-.111-.733-.111-.3 0-.537.038-.706.114a.889.889 0 0 0-.396.338c-.094.143-.159.346-.194.604l.894.076c.025-.188.074-.317.147-.394a.375.375 0 0 1 .279-.108c.11 0 .2.035.272.108a.344.344 0 0 1 .108.258.55.55 0 0 1-.108.297c-.074.102-.241.254-.503.453zm.055 6.386a.398.398 0 0 1-.282-.105c-.074-.07-.128-.195-.162-.378L4 18.085c.059.204.142.372.251.506.109.133.248.235.417.306.168.069.399.103.692.103.3 0 .541-.047.725-.14a1 1 0 0 0 .424-.403c.098-.175.146-.354.146-.544a.823.823 0 0 0-.088-.393.708.708 0 0 0-.249-.261 1.015 1.015 0 0 0-.286-.11.943.943 0 0 0 .345-.299.673.673 0 0 0 .113-.383.747.747 0 0 0-.281-.596c-.187-.159-.49-.238-.909-.238-.365 0-.648.072-.847.219-.2.143-.334.353-.404.626l.844.151c.023-.162.067-.274.133-.338s.151-.098.257-.098a.33.33 0 0 1 .241.089c.059.06.087.139.087.238 0 .104-.038.193-.117.27s-.177.112-.293.112a.907.907 0 0 1-.116-.011l-.045.649a1.13 1.13 0 0 1 .289-.056c.132 0 .237.041.313.126.077.082.115.199.115.352 0 .146-.04.266-.119.354a.394.394 0 0 1-.301.134zm.948-10.083V5h-.739a1.47 1.47 0 0 1-.394.523c-.168.142-.404.262-.708.365v.754a2.595 2.595 0 0 0 .937-.48v2.206h.904zM9 6h11v2H9zm0 5h11v2H9zm0 5h11v2H9z\"></path>\r\n  </svg>\r\n);\r\nexport const ImageIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M5 7C5 5.89543 5.89543 5 7 5H17C18.1046 5 19 5.89543 19 7V12.5858L18.7071 12.2929L18.6934 12.2794C18.091 11.6998 17.3358 11.3301 16.5 11.3301C15.6642 11.3301 14.909 11.6998 14.3066 12.2794L14.2929 12.2929L14 12.5858L11.7071 10.2929L11.6934 10.2794C11.091 9.6998 10.3358 9.33014 9.5 9.33014C8.66419 9.33014 7.909 9.6998 7.30662 10.2794L7.29289 10.2929L5 12.5858V7ZM15.4142 14L15.6997 13.7146C16.0069 13.4213 16.2841 13.3301 16.5 13.3301C16.7159 13.3301 16.9931 13.4213 17.3003 13.7146L19 15.4142V17C19 18.1046 18.1046 19 17 19H7C5.89543 19 5 18.1046 5 17V15.4142L8.69966 11.7146C9.0069 11.4213 9.28406 11.3301 9.5 11.3301C9.71594 11.3301 9.9931 11.4213 10.3003 11.7146L13.2929 14.7071L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L15.4142 14ZM21 15.001V17C21 19.2091 19.2091 21 17 21H7C4.79086 21 3 19.2091 3 17V15.0002V14.9998V7C3 4.79086 4.79086 3 7 3H17C19.2091 3 21 4.79086 21 7V14.999C21 14.9997 21 15.0003 21 15.001ZM15 7C14.4477 7 14 7.44772 14 8C14 8.55228 14.4477 9 15 9H15.01C15.5623 9 16.01 8.55228 16.01 8C16.01 7.44772 15.5623 7 15.01 7H15Z\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const LinkIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M8.465 11.293c1.133-1.133 3.109-1.133 4.242 0l.707.707 1.414-1.414-.707-.707c-.943-.944-2.199-1.465-3.535-1.465s-2.592.521-3.535 1.465L4.929 12a5.008 5.008 0 0 0 0 7.071 4.983 4.983 0 0 0 3.535 1.462A4.982 4.982 0 0 0 12 19.071l.707-.707-1.414-1.414-.707.707a3.007 3.007 0 0 1-4.243 0 3.005 3.005 0 0 1 0-4.243l2.122-2.121z\"></path>\r\n    <path d=\"m12 4.929-.707.707 1.414 1.414.707-.707a3.007 3.007 0 0 1 4.243 0 3.005 3.005 0 0 1 0 4.243l-2.122 2.121c-1.133 1.133-3.109 1.133-4.242 0L10.586 12l-1.414 1.414.707.707c.943.944 2.199 1.465 3.535 1.465s2.592-.521 3.535-1.465L19.071 12a5.008 5.008 0 0 0 0-7.071 5.006 5.006 0 0 0-7.071 0z\"></path>\r\n  </svg>\r\n);\r\nexport const CodeIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"m7.375 16.781 1.25-1.562L4.601 12l4.024-3.219-1.25-1.562-5 4a1 1 0 0 0 0 1.562l5 4zm9.25-9.562-1.25 1.562L19.399 12l-4.024 3.219 1.25 1.562 5-4a1 1 0 0 0 0-1.562l-5-4zm-1.649-4.003-4 18-1.953-.434 4-18z\"></path>\r\n  </svg>\r\n);\r\nexport const SubScriptIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M4.7433 5.33104C4.37384 4.92053 3.74155 4.88726 3.33104 5.25671C2.92053 5.62617 2.88726 6.25846 3.25671 6.66897L7.15465 11L3.25671 15.331C2.88726 15.7416 2.92053 16.3738 3.33104 16.7433C3.74155 17.1128 4.37384 17.0795 4.7433 16.669L8.50001 12.4949L12.2567 16.669C12.6262 17.0795 13.2585 17.1128 13.669 16.7433C14.0795 16.3738 14.1128 15.7416 13.7433 15.331L9.84537 11L13.7433 6.66897C14.1128 6.25846 14.0795 5.62617 13.669 5.25671C13.2585 4.88726 12.6262 4.92053 12.2567 5.33104L8.50001 9.50516L4.7433 5.33104ZM17.3181 14.0484C17.6174 13.7595 18.1021 13.7977 18.3524 14.13C18.5536 14.3971 18.5353 14.7698 18.3088 15.0158L15.2643 18.3227C14.9955 18.6147 14.9248 19.0382 15.0842 19.4017C15.2437 19.7652 15.6031 20 16 20H20C20.5523 20 21 19.5523 21 19C21 18.4477 20.5523 18 20 18H18.2799L19.7802 16.3704C20.6607 15.414 20.7321 13.965 19.95 12.9267C18.9769 11.6348 17.0925 11.4862 15.929 12.6096L15.3054 13.2116C14.9081 13.5953 14.897 14.2283 15.2806 14.6256C15.6642 15.023 16.2973 15.0341 16.6946 14.6505L17.3181 14.0484Z\"\r\n      fill=\"#000000\"\r\n    />\r\n  </svg>\r\n);\r\nexport const SuperScriptIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M17.3181 6.04842C17.6174 5.75945 18.1021 5.79767 18.3524 6.12997C18.5536 6.39707 18.5353 6.76978 18.3088 7.01579L15.2643 10.3227C14.9955 10.6147 14.9248 11.0382 15.0842 11.4017C15.2437 11.7652 15.6031 12 16 12H20C20.5523 12 21 11.5523 21 11C21 10.4477 20.5523 10 20 10H18.2799L19.7802 8.37041C20.6607 7.41399 20.7321 5.96504 19.95 4.92665C18.9769 3.63478 17.0925 3.48621 15.929 4.60962L15.3054 5.21165C14.9081 5.59526 14.897 6.22833 15.2806 6.62564C15.6642 7.02296 16.2973 7.03406 16.6946 6.65045L17.3181 6.04842ZM4.7433 8.33104C4.37384 7.92053 3.74155 7.88725 3.33104 8.25671C2.92053 8.62616 2.88726 9.25845 3.25671 9.66896L7.15465 14L3.25671 18.331C2.88726 18.7415 2.92053 19.3738 3.33104 19.7433C3.74155 20.1128 4.37384 20.0795 4.7433 19.669L8.50001 15.4948L12.2567 19.669C12.6262 20.0795 13.2585 20.1128 13.669 19.7433C14.0795 19.3738 14.1128 18.7415 13.7433 18.331L9.84537 14L13.7433 9.66896C14.1128 9.25845 14.0795 8.62616 13.669 8.25671C13.2585 7.88725 12.6262 7.92053 12.2567 8.33104L8.50001 12.5052L4.7433 8.33104Z\"\r\n      fill=\"#000000\"\r\n    />\r\n  </svg>\r\n);\r\nexport const TableIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M5 4C4.73478 4 4.48043 4.10536 4.29289 4.29289C4.10536 4.48043 4 4.73478 4 5V9H9V4H5ZM5 2C4.20435 2 3.44129 2.31607 2.87868 2.87868C2.31607 3.44129 2 4.20435 2 5V19C2 19.7957 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H19C19.7957 22 20.5587 21.6839 21.1213 21.1213C21.6839 20.5587 22 19.7957 22 19V5C22 4.20435 21.6839 3.44129 21.1213 2.87868C20.5587 2.31607 19.7957 2 19 2H5ZM11 4V9H20V5C20 4.73478 19.8946 4.48043 19.7071 4.29289C19.5196 4.10536 19.2652 4 19 4H11ZM20 11H11V20H19C19.2652 20 19.5196 19.8946 19.7071 19.7071C19.8946 19.5196 20 19.2652 20 19V11ZM9 20V11H4V19C4 19.2652 4.10536 19.5196 4.29289 19.7071C4.48043 19.8946 4.73478 20 5 20H9Z\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const LayoutIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M2.58579 2.58579C2.96086 2.21071 3.46957 2 4 2H20C20.5304 2 21.0391 2.21071 21.4142 2.58579C21.7893 2.96086 22 3.46957 22 4V20C22 20.5304 21.7893 21.0391 21.4142 21.4142C21.0391 21.7893 20.5304 22 20 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V4C2 3.46957 2.21071 2.96086 2.58579 2.58579ZM13 20H20V4H13V20ZM11 4V20H4V4H11Z\"\r\n    ></path>{\" \"}\r\n  </svg>\r\n);\r\n\r\nexport const EditIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"m7 17.013 4.413-.015 9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583v4.43zM18.045 4.458l1.589 1.583-1.597 1.582-1.586-1.585 1.594-1.58zM9 13.417l6.03-5.973 1.586 1.586-6.029 5.971L9 15.006v-1.589z\"></path>\r\n    <path d=\"M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 24 20\"\r\n  >\r\n    <path d=\"M9.5 22c2.003 0 3.887-.78 5.313-2.207l6.904-7.096A1 1 0 0 0 21 11h-3.301l4.175-7.514a1.001 1.001 0 0 0-1.359-1.36l-7.11 3.95.576-2.879a1 1 0 0 0-1.629-.957L4.196 9.197c-2.924 2.924-2.924 7.682 0 10.606A7.452 7.452 0 0 0 9.5 22zM5.552 10.665l5.902-5.031-.248 1.24-.186.93v.001l-.424 2.119 7.83-4.35-3.3 5.94-.001.001L14.301 13h4.331l-5.243 5.389C12.35 19.428 10.969 20 9.5 20s-2.851-.572-3.89-1.611c-2.143-2.144-2.143-5.634-.058-7.724z\"></path>\r\n    <path d=\"M9.5 18a3.492 3.492 0 0 0 1.484-6.659c.005.053.016.105.016.159a1.5 1.5 0 1 1-3 0c0-.054.011-.106.016-.159A3.492 3.492 0 0 0 9.5 18z\"></path>\r\n  </svg>\r\n);\r\nexport const HeadingIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M18 20V4h-3v6H9V4H6v16h3v-7h6v7z\"></path>\r\n  </svg>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/ui-component.css\";\r\nimport Tooltip from \"./ToolTip\";\r\n\r\nconst AppButton = ({ type = \"primary\", children, onClick, disabled = false }) => {\r\n  const className = `button button-${type}`;\r\n  \r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick} disabled={disabled}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst IconButton = ({ children, onClick, id, toolTip, isActive }) => {\r\n  \r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <Tooltip text={toolTip}>\r\n      <style>\r\n        {`\r\n          .toolbarBtnDiv.active {\r\n            background-color: #ddd; /* Highlighted background color */\r\n            border: 1px solid #333; /* Highlighted border */\r\n          }\r\n        `}\r\n      </style>\r\n      <div\r\n        className={`toolbarBtnDiv ${isActive ? \"active\" : \"\"}`}\r\n      >\r\n        <button className=\"toolbarBtn\" onClick={handleClick} id={id}>\r\n          {children}\r\n        </button>\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst LinkButton = ({ text, url, onEdit, onDelete }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleClickLinkBtn = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n  };\r\n\r\n  const handleClickEdit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onEdit();\r\n  };\r\n\r\n  const handleClickDel = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onDelete();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"link-button-container\"\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      style={{ display: \"inline-block\", position: \"relative\" }}\r\n    >\r\n      <button className=\"link-button\" onClick={handleClickLinkBtn}>\r\n        {text}\r\n      </button>\r\n    \r\n      {hover && (\r\n        <div\r\n          className=\"link-options\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"100%\",\r\n            left: \"0\",\r\n            minWidth: \"80px\",\r\n            background: \"white\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"4px\",\r\n          }}\r\n        >\r\n          <button className=\"toolbarBtn\" onClick={onEdit} id=\"linkEditBtn\">\r\n            Edit\r\n          </button>\r\n          <button className=\"toolbarBtn\" onClick={onDelete} id=\"linkDelBtn\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AppButton, IconButton, LinkButton };\r\n","import React from \"react\";\r\nimport \"../../styles/ui-component.css\";\r\n\r\nconst Tooltip = ({ text, children }) => {\r\n  return text ? (\r\n    <div className=\"tooltip-container\">\r\n      <div className=\"tooltip\">{text}</div>\r\n      {children}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/ui-component.css\";\r\nimport { AppButton, IconButton } from \"./Button.jsx\";\r\nimport * as Icons from \"../../assets/icon.jsx\";\r\n\r\n// Image/Video Dialog\r\nconst ImageUploadSelectionDialog = ({ isOpen, onClose, onSubmit, title, children }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // valid extensions for image and video.\r\n  const validImageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"webp\"];\r\n  const validVideoExtensions = [\"mp4\", \"avi\", \"mov\", \"wmv\", \"flv\", \"webm\"];\r\n\r\n  // Reset dialog state when it is opened\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      resetToDefault();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const closeDialog = () => {\r\n    resetToDefault();\r\n    onClose();\r\n  };\r\n\r\n  const resetToDefault = () => {\r\n    setImageUrl(\"\");\r\n    setFile(null);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      const fileExtension = selectedFile.name.split(\".\").pop().toLowerCase();\r\n      if (\r\n        validImageExtensions.includes(fileExtension) ||\r\n        validVideoExtensions.includes(fileExtension)\r\n      ) {\r\n        setFile(selectedFile);\r\n        setError(\"\");\r\n      } else {\r\n        setFile(null);\r\n        setError(\"Invalid file type. Please select an image or video file.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (file || imageUrl) {\r\n      onSubmit({ file, imageUrl });\r\n      onClose();\r\n    } else {\r\n      setError(\"Please select a file or image url\");\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"dialog-overlay\">\r\n      <div className=\"dialog-container\">\r\n        <div className=\"dialog-header\">\r\n          {title}\r\n          <IconButton onClick={onClose} id=\"dialogClose\">\r\n            <Icons.CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"dialog-body\">\r\n          <div className=\"container\">\r\n            <label htmlFor=\"file-input\" className=\"custom-file-input\">\r\n              {!file ? \"Select file\" : \"Reselect file\"}\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file-input\"\r\n              accept=\"image/*,video/*\"\r\n              onChange={handleFileChange}\r\n            />\r\n            {file && (\r\n              <div className=\"file-info\">\r\n                <p>Selected file: {file.name} </p>\r\n                <p>File size: {(file.size / 1024).toFixed(2)} KB</p>\r\n              </div>\r\n            )}\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"dialog-footer\">\r\n          <AppButton type=\"cancel\" onClick={closeDialog}>\r\n            Cancel\r\n          </AppButton>\r\n          <AppButton onClick={handleSubmit}>Submit</AppButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FileUrlDialog = ({ isOpen, onClose, onSubmit, linkText, link, children }) => {\r\n  const [url, setUrl] = useState(link || \"\"); // Initialize with link if provided\r\n  const [text, setText] = useState(linkText || \"\"); // Initialize with title if provided\r\n  const [error, setError] = useState(\"\");\r\n\r\n// Reset dialog state after submission\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      resetToDefault();\r\n    }\r\n  }, [isOpen, link, linkText]);\r\n\r\n  const closeDialog = () => {\r\n    resetToDefault();\r\n    onClose();\r\n  };\r\n\r\n  const resetToDefault = () => {\r\n    setUrl(link || \"\");\r\n    setText(linkText || \"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleLinkUrl = (event) => {\r\n    setUrl(event.target.value);\r\n  };\r\n\r\n  const handleLinkText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let errorMessage = \"\";\r\n    if (!url) {\r\n      errorMessage += \"Please provide a file URL. \";\r\n    }\r\n    if (!text) {\r\n      errorMessage += \"Please provide a title for the link.\";\r\n    }\r\n    if (errorMessage) {\r\n      setError(errorMessage);\r\n    } else {\r\n      onSubmit({ text, url });\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"dialog-overlay\">\r\n      <div className=\"dialog-container\">\r\n        <div className=\"dialog-header\">\r\n          {\"Enter Title\"}\r\n          <IconButton onClick={onClose} id=\"dialogClose\">\r\n            <Icons.CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"dialog-body\">\r\n          <div className=\"container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"image-url-input\"\r\n              placeholder=\"Link Text\"\r\n              value={text}\r\n              onChange={handleLinkText}\r\n            />\r\n          </div>\r\n          <div className=\"container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"image-url-input\"\r\n              placeholder=\"Paste image URL\"\r\n              value={url}\r\n              onChange={handleLinkUrl}\r\n            />\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"dialog-footer\">\r\n          <AppButton type=\"cancel\" onClick={closeDialog}>\r\n            Cancel\r\n          </AppButton>\r\n          <AppButton onClick={handleSubmit}>Submit</AppButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ImageUploadSelectionDialog, FileUrlDialog };\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/ui-component.css\";\r\nimport Tooltip from \"./ToolTip\";\r\n\r\nconst IconDropDown = ({ items, onChange, icon, id, openRight, toolTip }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleButtonClick = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (value, e) => {\r\n    e.preventDefault();\r\n    onChange(value);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`icon-dropdown ${openRight ? \"open-right\" : \"\"}`}>\r\n      <Tooltip text={toolTip}>\r\n        <button className=\"dropbtn\" id={id} onMouseDown={handleButtonClick} onClick={(e)=> {e.preventDefault(); e.stopPropagation()}}>\r\n          {icon}\r\n        </button>\r\n      </Tooltip>\r\n      {isOpen && (\r\n        <div className=\"icon-dropdown-content\">\r\n          {items.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"dropdown-item\"\r\n              onMouseDown={(e) => handleItemClick(item.value, e)}\r\n            >\r\n              {item.icon && <span className=\"dropdown-icon\">{item.icon}</span>}\r\n              {item.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { IconDropDown };\r\n","import { useState } from 'react';\r\n\r\nexport const usePreviewMode = () => {\r\n const [isToolbarVisible, setToolbarVisibility] = useState(false);\r\n\r\n const toggleToolbarVisibility = () => {\r\n   setToolbarVisibility((prev) => !prev);\r\n };\r\n\r\n return { isToolbarVisible, toggleToolbarVisibility };\r\n}","import React from \"react\";\r\nimport { useEditor } from \"../../contexts/editorContext.jsx\";\r\nimport \"../../index.css\";\r\n\r\nconst placeCursorTextEnd = (el) => {\r\n  const range = document.createRange();\r\n  range.selectNodeContents(el);\r\n  range.collapse(false);\r\n  const selection = window.getSelection();\r\n  selection.removeAllRanges();\r\n  selection.addRange(range);\r\n}\r\n\r\n\r\nconst Editor = ({ height = \"300px\" }) => {\r\n  const { editorRef, wordCount, charCount } = useEditor();\r\n\r\n  return (\r\n    <>\r\n      {/* main editor */}\r\n      <div\r\n        ref={editorRef}\r\n        contentEditable\r\n        className=\"editor-content\"\r\n        onFocus={() => placeCursorTextEnd(editorRef.current)}\r\n        style={{\r\n          minHeight: height,\r\n          padding: \"10px\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      />\r\n      {/* footer */}\r\n      <div className=\"editor-footer\">\r\n        <span>Words: {wordCount}</span> | <span>Chars: {charCount}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Block, { AddBlockContextMenu, BlockToolbar, BlockToolbarColumn } from \"../Block\";\r\nimport { BsArrowsExpand, BsArrowsExpandVertical } from \"react-icons/bs\";\r\nimport { BlockType, EditorParsedBlock } from \"../definitions\";\r\nimport { useEditor } from \"../context\";\r\nimport Button from \"../components/Button\";\r\nimport { MdCenterFocusStrong } from \"react-icons/md\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\n\r\ntype GroupBlockType = BlockType<{\r\n    flow: 'horizontal' | 'vertical',\r\n    template?: number[],\r\n}>\r\nexport interface RowBlockProps {\r\n    block: EditorParsedBlock<GroupBlockType>,\r\n    isActive?: boolean\r\n}\r\n\r\nconst RowBlock: React.FC<RowBlockProps> = ({ block, isActive }) => {\r\n    const minChildWidth = 320;\r\n    const { blockID, hasFocusWithin, value, children } = block;\r\n    const { flow, height, template } = value ?? {};\r\n\r\n    const [groupWidth, setGroupWidth] = useState<number | null>(null);\r\n    const [currentTemplate, setCurrentTemplate] = useState<number[]>(template || []);\r\n    const [isResizing, setIsResizing] = useState<number | null>(null);\r\n\r\n    const groupRef = useRef<HTMLDivElement|null>(null);\r\n    const { blocks, setActiveBlock, updateBlock } = useEditor();\r\n\r\n    const prevXRef = useRef<number | null>(null);\r\n\r\n    const isResizable = !!children?.length && groupWidth ? groupWidth > (minChildWidth * children?.length) : false;\r\n\r\n    //Resize Handlers\r\n\r\n    const handleResizeStart = useCallback((e: React.MouseEvent<HTMLDivElement>, indexEl: number) => {\r\n        if (isResizable) {\r\n            setIsResizing(indexEl);\r\n            prevXRef.current = e.clientX;\r\n            document.body.style.userSelect = 'none';\r\n        }\r\n    }, [prevXRef, setIsResizing, groupWidth, minChildWidth, isResizable]);\r\n\r\n    useEffect(() => {\r\n        if (children && children?.length !== currentTemplate.length) {\r\n            const newTemplate = Array(children.length).fill(100 / children?.length);\r\n            updateBlock(blockID, {\r\n                value: {\r\n                    template: newTemplate\r\n                }\r\n            })\r\n        }\r\n    }, [children?.length]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isResizing !== null) {\r\n            const currentTemplateRef: { current: number[] | null } = { current: null }\r\n\r\n            const handleResize = (e: MouseEvent) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                const deltaX = prevXRef.current ? e.clientX - prevXRef.current : 0;\r\n                const deltaPercentage = groupWidth ? deltaX / groupWidth * 100 : 0;\r\n                if (groupWidth)\r\n                    setCurrentTemplate((prevTemplate) => {\r\n                        const newTemplate = [...prevTemplate];\r\n                        newTemplate[isResizing] += deltaPercentage;\r\n                        newTemplate[isResizing + 1] -= deltaPercentage;\r\n                        if (\r\n                            newTemplate[isResizing] / 100 * groupWidth < minChildWidth ||\r\n                            newTemplate[isResizing + 1] / 100 * groupWidth < minChildWidth\r\n                        ) {\r\n                            currentTemplateRef.current = prevTemplate;\r\n                            return prevTemplate;\r\n                        }\r\n                        currentTemplateRef.current = newTemplate;\r\n                        return newTemplate;\r\n                    });\r\n                prevXRef.current = e.clientX;\r\n            };\r\n\r\n            const handleResizeEnd = () => {\r\n\r\n                setIsResizing(null);\r\n                prevXRef.current = null;\r\n                document.body.style.userSelect = '';\r\n                if (currentTemplateRef.current) {\r\n                    updateBlock(blockID, {\r\n                        value: {\r\n                            template: currentTemplateRef.current.map((val => Math.floor(val)))\r\n                        }\r\n                    });\r\n                }\r\n\r\n            };\r\n\r\n\r\n            document.addEventListener('mousemove', handleResize);\r\n            document.addEventListener('mouseup', handleResizeEnd);\r\n            return () => {\r\n                document.removeEventListener('mousemove', handleResize);\r\n                document.removeEventListener('mouseup', handleResizeEnd);\r\n            }\r\n        }\r\n    }, [isResizing, groupWidth]);\r\n\r\n    useEffect(() => {\r\n        setCurrentTemplate(template || []);\r\n    }, [template])\r\n\r\n    //Observe Resize event on group div\r\n    useEffect(() => {\r\n        const handleResize = (entries: ResizeObserverEntry[]) => {\r\n            for (const entry of entries) {\r\n                const { width } = entry.contentRect;\r\n                setGroupWidth(width);\r\n            }\r\n        };\r\n\r\n        const resizeObserver = new ResizeObserver(handleResize);\r\n\r\n        if (groupRef.current) {\r\n            resizeObserver.observe(groupRef.current);\r\n        }\r\n        \r\n        setGroupWidth(groupRef.current?.getBoundingClientRect().width || null);\r\n\r\n        return () => {\r\n            if (groupRef.current) {\r\n                resizeObserver.unobserve(groupRef.current);\r\n            }\r\n            resizeObserver.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (children)\r\n            updateBlock(blockID, {\r\n                value: {\r\n                    template: children.map(() => 100 / children.length)\r\n                }\r\n\r\n            })\r\n    }, [children])\r\n\r\n    return (\r\n        <>\r\n            <BlockToolbar>\r\n                <BlockToolbarColumn\r\n                    title={'Direction'}\r\n                >\r\n                    <Button\r\n                        variant={flow === \"vertical\" ? undefined : \"selected\"}\r\n                        onClick={() => updateBlock(blockID, {\r\n                            value: {\r\n                                flow: \"horizontal\"\r\n                            }\r\n                        })}\r\n                        title=\"Empiler les blocs horizontalement\"\r\n                        ariaLabel=\"Empiler les blocs horizontalement\"\r\n                    >\r\n                        <BsArrowsExpandVertical />\r\n                    </Button>\r\n                    <Button\r\n                        variant={flow !== \"vertical\" ? undefined : \"selected\"}\r\n                        onClick={() => updateBlock(blockID, {\r\n                            value: {\r\n                                flow: \"vertical\"\r\n                            }\r\n                        })}\r\n                        title=\"Empiler les blocs verticalement\"\r\n                        ariaLabel=\"Empiler les blocs verticalement\"\r\n                    >\r\n                        <BsArrowsExpand />\r\n                    </Button>\r\n                </BlockToolbarColumn>\r\n            </BlockToolbar>\r\n            <div\r\n                className={clsx(\r\n                    \"sg-block__blockGroup\",\r\n                    block.hasFocusWithin && 'sg-block__blockGroup--focusWithin',\r\n                    flow === \"vertical\" ? 'sg-block__blockGroup--vertical' : 'sg-block__blockGroup--horizontal',\r\n                    height && (typeof height === 'number' || height.indexOf('px') !== -1) ? 'sg-block__blockGroup--fixedHeight' : ''\r\n                )}\r\n                ref={groupRef}\r\n            >\r\n                {!!children &&\r\n                    block.children?.map((childID, indexEl) => (\r\n                        <div\r\n                            key={childID}\r\n                            className=\"sg-block__blockGroup__childContainer\"\r\n                            style={{\r\n                                flex: currentTemplate?.[indexEl] + \"% 1 0\",\r\n                                minWidth: minChildWidth + \"px\"\r\n                            }}\r\n                        >\r\n                            <Block\r\n                                horizontalFlow={flow !== 'vertical'}\r\n                                block={blocks.get(childID)}\r\n                            />\r\n                            {isActive && (indexEl !== children.length - 1) &&\r\n                                <div\r\n                                    className={clsx(\r\n                                        \"sg-block__blockGroup__resizeHandle\",\r\n                                        (!isResizable || flow === 'vertical') && \"sg-block__blockGroup__resizeHandle--disabled\",\r\n                                    )}\r\n                                    onMouseDown={(e) => handleResizeStart(e, indexEl)}\r\n                                />}\r\n                        </div>\r\n                    ))\r\n                }\r\n                {!children?.length &&\r\n                    <div className=\"sg-block__blockGroup__placeholder\" />\r\n                }\r\n                {!!isActive &&\r\n                    <AddBlockContextMenu\r\n                        args={{ parentID: blockID }}\r\n                        className=\"sg-block__blockGroup__addChild\"\r\n                    >\r\n                        <button\r\n                            title=\"Ajouter des blocs à l'intérieur du groupe\"\r\n                            aria-label=\"Ajouter des blocs à l'intérieur du groupe\"\r\n                            className=\"sg-block__btn sg-block__btn--square\"><FaPlus /></button>\r\n                    </AddBlockContextMenu>\r\n                }\r\n\r\n                {(hasFocusWithin && !isActive) &&\r\n                    <Button\r\n                        className=\"sg-block__btn sg-block__btn--square sg-block__blockGroup__focusParent\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setActiveBlock(blockID)\r\n                        }}\r\n                        title=\"Sélectionner le groupe parent\"\r\n                        ariaLabel=\"Sélectionner le groupe parent\"\r\n                    >\r\n                        <MdCenterFocusStrong />\r\n                    </Button>\r\n                }\r\n            </div >\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default RowBlock;","import { Enable } from \"re-resizable\"\r\nimport { ComponentType, ReactElement } from \"react\"\r\nimport { IconType } from \"react-icons\"\r\n\r\nexport interface BlocksEditorProps {\r\n    data?: BlockType[] | null,\r\n    onChange?: (data: BlockType[]) => void,\r\n    extraBlocks?: Record<string, EditorBlock>\r\n}\r\n\r\ntype EditorBlockComponentProps = {\r\n    block: EditorParsedBlock,\r\n    isActive?: boolean\r\n}\r\n\r\nexport type EditorBlock = {\r\n    name: string,\r\n    type: string,\r\n    icon?: IconType|ComponentType,\r\n    render?: (value: BlockType<BlockValueGeneric>['value']) => string,\r\n    editor?: ComponentType<EditorBlockComponentProps>,\r\n    defaultValue?: BlockType<BlockValueGeneric>['value'],\r\n    acceptChildren?: boolean,\r\n    isResizable?: boolean | Enable,\r\n    hasSpacingOptions?: boolean\r\n}\r\n\r\nexport interface EditorProviderProps {\r\n    children: React.ReactNode,\r\n    data?: BlockType[] | null,\r\n    onChange?: (data: BlockType[]) => void,\r\n    availableBlocks: { [key: string|symbol]: EditorBlock }\r\n}\r\n\r\nexport type EditorParsedBlock<T extends BlockType = BlockType<BlockValueGeneric>> = Omit<T, 'children'> & {\r\n    blockID: string,\r\n    parentID?: string,\r\n    children?: string[],\r\n    hasFocusWithin?: boolean,\r\n    isActive?: boolean,\r\n}\r\n \r\ntype BlockValueGeneric = Record<symbol|string, string|number|object|undefined>;\r\n\r\nexport type BlockType<V = BlockValueGeneric> = {\r\n    type: string;\r\n    value?: V & { \r\n        width?: number|string,\r\n        height?: number|string,\r\n        spacings?: {\r\n            top?: string,\r\n            right?: string,\r\n            bottom?: string,\r\n            left?: string\r\n        }\r\n    };\r\n    children?: BlockType<BlockValueGeneric>[];\r\n};\r\n\r\nexport type EditorRefObject = {\r\n    getJSONValue: () => BlockType[];\r\n    getHTMLValue: () => string;\r\n}\r\n\r\nexport type addBlockMenuProps = { \r\n    className?: string, \r\n    args?: { parentID?: string, position?: 'after' | 'before', reference?: string }, \r\n    children: ReactElement \r\n}"],"mappings":"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","names":["import_react","import_react","import_jsx_runtime","import_react","import_react","import_jsx_runtime","value","import_jsx_runtime","clsx","_a","_b","_c","import_fa6","import_jsx_runtime","e","_a","value","import_fa6","import_clsx","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_jsx_runtime","useEditor","import_react","import_react","import_jsx_runtime","import_react","import_react","import_jsx_runtime","import_jsx_runtime","import_react","import_jsx_runtime","import_react","import_jsx_runtime","import_react","import_jsx_runtime","useEditor","React","import_react","import_jsx_runtime","useEditor","import_jsx_runtime","useEditor","import_jsx_runtime","_a","_b","clsx","import_react","import_clsx","import_md","import_fa6","import_jsx_runtime","_a","clsx","import_fa6","import_clsx","import_jsx_runtime","clsx"]}